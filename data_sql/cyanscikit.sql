-- MySQL dump 10.13  Distrib 5.7.17, for Linux (x86_64)
--
-- Host: localhost    Database: cyanscikit
-- ------------------------------------------------------
-- Server version	5.7.17-0ubuntu0.16.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(80) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
INSERT INTO `auth_group` VALUES (1,'后台管理员');
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `group_id` (`group_id`,`permission_id`),
  KEY `auth_group__permission_id_5745925d751e0609_fk_auth_permission_id` (`permission_id`),
  CONSTRAINT `auth_group__permission_id_5745925d751e0609_fk_auth_permission_id` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permission_group_id_62ec88c76636ded7_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
INSERT INTO `auth_group_permissions` VALUES (1,1,1),(2,1,2),(3,1,3),(4,1,4),(5,1,5),(6,1,6),(7,1,7),(8,1,8),(9,1,9),(10,1,10),(11,1,11),(12,1,12),(13,1,13),(14,1,14),(15,1,15),(16,1,16),(17,1,17),(18,1,18),(19,1,19),(20,1,20),(21,1,21),(22,1,22),(23,1,23),(24,1,24),(25,1,25),(26,1,26),(27,1,27),(28,1,28),(29,1,29),(30,1,30),(31,1,31),(32,1,32),(33,1,33),(34,1,34),(35,1,35),(36,1,36),(37,1,37),(38,1,38),(39,1,39);
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `content_type_id` (`content_type_id`,`codename`),
  CONSTRAINT `auth__content_type_id_3a1e1f65055f73e0_fk_django_content_type_id` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can add permission',2,'add_permission'),(5,'Can change permission',2,'change_permission'),(6,'Can delete permission',2,'delete_permission'),(7,'Can add group',3,'add_group'),(8,'Can change group',3,'change_group'),(9,'Can delete group',3,'delete_group'),(10,'Can add user',4,'add_user'),(11,'Can change user',4,'change_user'),(12,'Can delete user',4,'delete_user'),(13,'Can add content type',5,'add_contenttype'),(14,'Can change content type',5,'change_contenttype'),(15,'Can delete content type',5,'delete_contenttype'),(16,'Can add session',6,'add_session'),(17,'Can change session',6,'change_session'),(18,'Can delete session',6,'delete_session'),(19,'Can add item',7,'add_item'),(20,'Can change item',7,'change_item'),(21,'Can delete item',7,'delete_item'),(22,'Can add wcate',8,'add_wcate'),(23,'Can change wcate',8,'change_wcate'),(24,'Can delete wcate',8,'delete_wcate'),(25,'Can add example',9,'add_example'),(26,'Can change example',9,'change_example'),(27,'Can delete example',9,'delete_example'),(28,'Can add talk',10,'add_talk'),(29,'Can change talk',10,'change_talk'),(30,'Can delete talk',10,'delete_talk'),(31,'Can add cate',11,'add_cate'),(32,'Can change cate',11,'change_cate'),(33,'Can delete cate',11,'delete_cate'),(34,'Can add blog',12,'add_blog'),(35,'Can change blog',12,'change_blog'),(36,'Can delete blog',12,'delete_blog'),(37,'Can add news',13,'add_news'),(38,'Can change news',13,'change_news'),(39,'Can delete news',13,'delete_news');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(30) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'pbkdf2_sha256$30000$bwSY98Fn9Otr$ajugI2E69XdQlJa2RQMqRwB5CKGe528ZjMTIkX1wse4=','2017-05-04 15:40:31.001472',1,'cyanscikit','','','',1,1,'2016-11-04 09:02:00.000000');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_id` (`user_id`,`group_id`),
  KEY `auth_user_groups_group_id_6adc1b90d6855649_fk_auth_group_id` (`group_id`),
  CONSTRAINT `auth_user_groups_group_id_6adc1b90d6855649_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_3667b62d8e941e3f_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
INSERT INTO `auth_user_groups` VALUES (1,1,1);
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_id` (`user_id`,`permission_id`),
  KEY `auth_user_u_permission_id_1dd0cd10f39f5de2_fk_auth_permission_id` (`permission_id`),
  CONSTRAINT `auth_user_u_permission_id_1dd0cd10f39f5de2_fk_auth_permission_id` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_user_user_permissi_user_id_56e45f4eb9fadda8_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
INSERT INTO `auth_user_user_permissions` VALUES (1,1,1),(2,1,2),(3,1,3),(4,1,4),(5,1,5),(6,1,6),(7,1,7),(8,1,8),(9,1,9),(10,1,10),(11,1,11),(12,1,12),(13,1,13),(14,1,14),(15,1,15),(16,1,16),(17,1,17),(18,1,18),(19,1,19),(20,1,20),(21,1,21),(22,1,22),(23,1,23),(24,1,24),(25,1,25),(26,1,26),(27,1,27),(28,1,28),(29,1,29),(30,1,30),(31,1,31),(32,1,32),(33,1,33),(34,1,34),(35,1,35),(36,1,36),(37,1,37),(38,1,38),(39,1,39);
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog`
--

DROP TABLE IF EXISTS `blog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `blog_title` varchar(30) NOT NULL,
  `blog_id` varchar(64) NOT NULL,
  `blog_seenum` int(11) NOT NULL,
  `blog_time` datetime(6) NOT NULL,
  `blog_content` longtext NOT NULL,
  `blog_category_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `blog_id` (`blog_id`),
  KEY `blog_ccdfb85f` (`blog_category_id`),
  CONSTRAINT `blog_blog_category_id_75300916bbcab06_fk_blog_cate_id` FOREIGN KEY (`blog_category_id`) REFERENCES `blog_cate` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog`
--

LOCK TABLES `blog` WRITE;
/*!40000 ALTER TABLE `blog` DISABLE KEYS */;
INSERT INTO `blog` VALUES (1,'《机器学习实战》Logistic回归算法（1）','10000',26,'2016-11-09 14:10:00.000000','<div id=\"article_content\" class=\"article_content\" style=\"margin:35px 0px;font-size:15px;color:#555555;font-family:&quot;\">\r\n	<p style=\"font-size:14px;\">\r\n		<span style=\"font-family:&quot;\">=====================================================================</span> \r\n	</p>\r\n	<div style=\"font-family:Arial;font-size:14px;\">\r\n		<span style=\"font-family:&quot;\">《机器学习实战》系列博客是博主阅读《机器学习实战》这本书的笔记也包含一些其他python实现的机器学习算法</span> \r\n	</div>\r\n	<div style=\"font-size:14px;\">\r\n		<span style=\"font-family:&quot;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 算法实现均采用python</span> \r\n	</div>\r\n	<p style=\"font-size:14px;\">\r\n		<span style=\"font-family:&quot;\">github 源码同步：<a target=\"_blank\" href=\"https://github.com/Thinkgamer/Machine-Learning-With-Python\">https://github.com/Thinkgamer/Machine-Learning-With-Python</a></span> \r\n	</p>\r\n	<p style=\"font-size:14px;\">\r\n		<span style=\"font-family:&quot;\">=====================================================================</span> \r\n	</p>\r\n	<div style=\"font-size:14px;\">\r\n		<span style=\"font-family:&quot;\"></span> \r\n	</div>\r\n	<p style=\"font-size:14px;\">\r\n		<span style=\"font-family:&quot;\"><br />\r\n</span> \r\n	</p>\r\n	<p style=\"font-size:14px;\">\r\n		<span style=\"font-family:&quot;\">关于回归算法的分析与scikit-learn代码分析实现请参考：<a target=\"_blank\" href=\"http://blog.csdn.net/gamer_gyt/article/details/51232733\">点击阅读</a>&nbsp;，</span> \r\n	</p>\r\n	<div style=\"font-size:14px;\">\r\n		<span style=\"font-family:&quot;\">Logistic回归模型案例实战：<a target=\"_blank\" href=\"http://blog.csdn.net/gamer_gyt/article/details/51242150\">《机器学习实战》Logistic回归算法（2）</a></span> \r\n	</div>\r\n	<div style=\"font-size:14px;\">\r\n		<span style=\"font-family:&quot;\">下面算法演示用到的数据集在博客最后</span> \r\n	</div>\r\n	<div style=\"font-size:14px;\">\r\n		<span style=\"line-height:21px;\"><span style=\"font-family:&quot;\"><br />\r\n</span></span> \r\n	</div>\r\n	<h1>\r\n		<span style=\"line-height:21px;\"><span style=\"font-family:&quot;font-size:24px;\">一：Sigmoid函数和Logistic回归分类器</span></span> \r\n	</h1>\r\n	<div style=\"font-size:14px;\">\r\n		<div>\r\n			<h2>\r\n				1：Sigmoid函数\r\n			</h2>\r\n			<div>\r\n				单位阶跃函数（或者称为海维塞德阶跃函数）：在二分问题下，函数的输出类别是0和1，Simoid函数就是属于这种函数\r\n			</div>\r\n		</div>\r\n		<div>\r\n			其函数表达式为：<img src=\"file://C:/Users/Gamer%20Think/AppData/Local/YNote/data/qqC4A903F81C695CB6397EFE119ADCBC35/54ecb7c549354e478f6d0ece6697876b/clipboard.png\" alt=\"\" /> \r\n		</div>\r\n		<div>\r\n			<span></span><img src=\"http://img.blog.csdn.net/20160425000027760?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /><br />\r\n		</div>\r\n		<div>\r\n			其显示的图象为：\r\n		</div>\r\n		<div>\r\n			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img src=\"http://img.blog.csdn.net/20160425000043575?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /><img src=\"file://C:/Users/Gamer%20Think/AppData/Local/YNote/data/qqC4A903F81C695CB6397EFE119ADCBC35/5b145b1aeabb4aa9b043ef5935331119/clipboard.png\" alt=\"\" /> \r\n		</div>\r\n		<h2 style=\"font-size:14px;\">\r\n			2：Logistic回归分类器\r\n		</h2>\r\n		<div>\r\n			<div>\r\n				Simoid函数的输入记为：z=w0x0 + w1x1 + w2x2 .... + wnxn\r\n			</div>\r\n			<div>\r\n				如果采用向量的写法，上述公式可以写成z=w^t * x(w^t表示系数w的转置矩阵)\r\n			</div>\r\n			<div>\r\n				<span style=\"color:#362E2B;\">代入到Sigmoid函数可得：</span> \r\n			</div>\r\n			<div>\r\n				<span><img src=\"http://img.blog.csdn.net/20160425000112683?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /></span> \r\n			</div>\r\n		</div>\r\n		<div>\r\n			其输出分大于0.5和小于0.5，表示两个类别，也就实现了分类，确定了分类器的函数形式，接下来问题就是求最佳回归系数\r\n		</div>\r\n	</div>\r\n	<div style=\"font-size:14px;\">\r\n		<h1>\r\n			<span style=\"line-height:21px;\"><span style=\"font-size:24px;\"><span style=\"font-family:&quot;\"><br />\r\n</span></span></span> \r\n		</h1>\r\n		<h1>\r\n			<span style=\"line-height:21px;\"><span style=\"font-size:24px;\"><span style=\"font-family:&quot;\">二：基于最优化方法的最佳回归系数确定</span></span></span> \r\n		</h1>\r\n		<h2 style=\"font-size:14px;\">\r\n			<span style=\"font-family:&quot;\">2.1：梯度上升法</span> \r\n		</h2>\r\n		<div>\r\n			<span style=\"font-family:&quot;\">主要思想：要找到某函数的最大值，最好的办法是沿着该函数的梯度方向探寻</span> \r\n		</div>\r\n		<div>\r\n			<span style=\"font-family:&quot;\">下边这种图片是机器学习实战对梯度的数学解释：</span> \r\n		</div>\r\n		<div>\r\n			<span style=\"font-family:&quot;\"><span></span><img src=\"http://img.blog.csdn.net/20160425000230888?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /><br />\r\n</span> \r\n		</div>\r\n		<div>\r\n			<span style=\"font-family:&quot;\">&nbsp; &nbsp; &nbsp; &nbsp;梯度是有方向的，总是沿着函数值上升最快的方向移动（这有点感觉想物理中的加速度），因此我们沿着梯度方向或者反方向行进时，就能达到一个函数的最大值或者最小值，因此梯度上升算法就是不断更新梯度值，直到梯度不再变化或者变化很小，即函数达到了最大值</span> \r\n		</div>\r\n		<div>\r\n			<span style=\"font-family:&quot;\">梯度算法的迭代公式为（alpha为步长，即每一步移动量）：</span> \r\n		</div>\r\n<span style=\"font-family:&quot;\"><span></span><img src=\"http://img.blog.csdn.net/20160425000256389?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /><br />\r\n</span> \r\n	</div>\r\n	<div>\r\n		<div style=\"font-size:14px;\">\r\n			<span style=\"font-family:&quot;\">那么问题来了，我们如何求解函数的梯度，在 Machine Learning in Action一书中，作者没有解释，直接给出了代码</span> \r\n		</div>\r\n		<div>\r\n			<div class=\"dp-highlighter bg_python\" style=\"font-family:Consolas, &quot;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n				<div class=\"bar\">\r\n					<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n						<b>[python]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"CopyToClipboard\">copy</a> \r\n						<div>\r\n						</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1660464\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1660464/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span> \r\n					</div>\r\n				</div>\r\n				<ol class=\"dp-py\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n					<li class=\"alt\" style=\"color:inherit;\">\r\n						<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">h&nbsp;=&nbsp;sigmoid(dataMatrix*weights)&nbsp;&nbsp;&nbsp;&nbsp;</span></span> \r\n					</li>\r\n					<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n						<span style=\"color:black;background-color:inherit;\">error&nbsp;=&nbsp;(labelMat&nbsp;-&nbsp;h)&nbsp;&nbsp;&nbsp;&nbsp;</span> \r\n					</li>\r\n					<li class=\"alt\" style=\"color:inherit;\">\r\n						<span style=\"color:black;background-color:inherit;\">weights&nbsp;=&nbsp;weights&nbsp;+&nbsp;alpha&nbsp;*&nbsp;dataMatrix.transpose()*&nbsp;error&nbsp;&nbsp;</span> \r\n					</li>\r\n				</ol>\r\n			</div>\r\n		</div>\r\n		<div style=\"font-size:14px;\">\r\n			<span style=\"font-family:&quot;\"><span style=\"font-size:12px;line-height:1.5;\">当然在实战这本书也没有具体说明</span><span style=\"font-size:12px;line-height:1.5;\">（这里有一篇博客对这个公式进行了猜想推测：</span><a target=\"_blank\" href=\"http://blog.sina.com.cn/s/blog_61f1db170101k1wr.html\">http://blog.sina.com.cn/s/blog_61f1db170101k1wr.html</a><span style=\"line-height:1.5;\">&nbsp;&nbsp;</span><span style=\"font-size:12px;line-height:1.5;\">）</span></span> \r\n		</div>\r\n		<div style=\"font-size:14px;\">\r\n			<span style=\"font-size:12px;line-height:1.5;\"><span style=\"font-family:&quot;\"><br />\r\n</span></span> \r\n		</div>\r\n		<div style=\"font-size:14px;\">\r\n			<span style=\"font-size:12px;line-height:1.5;\"><span style=\"font-family:&quot;\">求梯度上升算法的代码，并画出图形：</span></span> \r\n		</div>\r\n		<div class=\"dp-highlighter bg_python\" style=\"font-family:Consolas, &quot;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n			<div class=\"bar\">\r\n				<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n					<b>[python]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"CopyToClipboard\">copy</a> \r\n					<div>\r\n					</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1660464\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1660464/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span> \r\n				</div>\r\n			</div>\r\n			<ol class=\"dp-py\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#coding:utf-8</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"string\" style=\"color:blue;background-color:inherit;\">\'\'</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">\'\'\'</span>&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">Created&nbsp;on&nbsp;2016/4/24</span>&nbsp;</span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\"></span>&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">@author:&nbsp;Gamer&nbsp;Think</span>&nbsp;</span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">\'\'\'</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">from</span><span style=\"background-color:inherit;\">&nbsp;numpy&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">import</span><span style=\"background-color:inherit;\">&nbsp;*&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#加载数据集</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">def</span><span style=\"background-color:inherit;\">&nbsp;loadDataSet():&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;dataMat&nbsp;=&nbsp;[]&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;labelMat&nbsp;=&nbsp;[]&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;fp&nbsp;=&nbsp;open(<span class=\"string\" style=\"color:blue;background-color:inherit;\">\"ex1.txt\"</span><span style=\"background-color:inherit;\">)&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">for</span><span style=\"background-color:inherit;\">&nbsp;line&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">in</span><span style=\"background-color:inherit;\">&nbsp;fp.readlines():&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lineArr&nbsp;=&nbsp;line.strip().split(<span class=\"string\" style=\"color:blue;background-color:inherit;\">\"\\t\"</span><span style=\"background-color:inherit;\">)&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#每行按\\t分割</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataMat.append([<span class=\"number\" style=\"background-color:inherit;\">1.0</span><span style=\"background-color:inherit;\">,float(lineArr[</span><span class=\"number\" style=\"background-color:inherit;\">0</span><span style=\"background-color:inherit;\">]),&nbsp;float(lineArr[</span><span class=\"number\" style=\"background-color:inherit;\">1</span><span style=\"background-color:inherit;\">])])&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;labelMat.append(float(lineArr[<span class=\"number\" style=\"background-color:inherit;\">2</span><span style=\"background-color:inherit;\">]))&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">return</span><span style=\"background-color:inherit;\">&nbsp;dataMat,labelMat&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#定义Sigmoid函数</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">def</span><span style=\"background-color:inherit;\">&nbsp;sigmoid(inX):&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">return</span><span style=\"background-color:inherit;\">&nbsp;</span><span class=\"number\" style=\"background-color:inherit;\">1.0</span><span style=\"background-color:inherit;\">/(</span><span class=\"number\" style=\"background-color:inherit;\">1</span><span style=\"background-color:inherit;\">+exp(-inX))&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#定义求解最佳回归系数</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">def</span><span style=\"background-color:inherit;\">&nbsp;gradAscent(dataMatIn,classLabels):&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;dataMatrix&nbsp;=&nbsp;mat(dataMatIn)&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#将数组转为矩阵</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;labelMat&nbsp;=&nbsp;mat(classLabels).transpose()&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;m,n&nbsp;=&nbsp;shape(dataMatrix)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#返回矩阵的行和列</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;alpha&nbsp;=&nbsp;<span class=\"number\" style=\"background-color:inherit;\">0.001</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#初始化&nbsp;alpha的值</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;maxCycles&nbsp;=&nbsp;<span class=\"number\" style=\"background-color:inherit;\">500</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#最大迭代次数</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;weights&nbsp;=&nbsp;ones((n,<span class=\"number\" style=\"background-color:inherit;\">1</span><span style=\"background-color:inherit;\">))&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#初始化最佳回归系数</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">for</span><span style=\"background-color:inherit;\">&nbsp;i&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">in</span><span style=\"background-color:inherit;\">&nbsp;range(</span><span class=\"number\" style=\"background-color:inherit;\">0</span><span style=\"background-color:inherit;\">,maxCycles):&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#引用原书的代码，求梯度</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;=&nbsp;sigmoid(dataMatrix*weights)&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error&nbsp;=&nbsp;labelMat&nbsp;-&nbsp;h&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weights&nbsp;=&nbsp;weights&nbsp;+&nbsp;alpha&nbsp;*&nbsp;dataMatrix.transpose()&nbsp;*&nbsp;error&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">return</span><span style=\"background-color:inherit;\">&nbsp;weights&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#分析数据，画出决策边界</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">def</span><span style=\"background-color:inherit;\">&nbsp;plotBestFit(wei,dataMatrix,labelMat):&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">import</span><span style=\"background-color:inherit;\">&nbsp;matplotlib.pyplot&nbsp;as&nbsp;plt&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;weights&nbsp;=&nbsp;wei.getA()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#将矩阵wei转化为list</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;dataArr&nbsp;=&nbsp;array(dataMatrix)&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#将矩阵转化为数组</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;=&nbsp;shape(dataMatrix)[<span class=\"number\" style=\"background-color:inherit;\">0</span><span style=\"background-color:inherit;\">]&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;xcord1&nbsp;=&nbsp;[];ycord1=[]&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;xcord2&nbsp;=&nbsp;[];ycord2=[]&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">for</span><span style=\"background-color:inherit;\">&nbsp;i&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">in</span><span style=\"background-color:inherit;\">&nbsp;range(n):&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">if</span><span style=\"background-color:inherit;\">&nbsp;int(labelMat[i])==</span><span class=\"number\" style=\"background-color:inherit;\">1</span><span style=\"background-color:inherit;\">:&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xcord1.append(dataArr[i,<span class=\"number\" style=\"background-color:inherit;\">1</span><span style=\"background-color:inherit;\">])&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ycord1.append(dataArr[i,<span class=\"number\" style=\"background-color:inherit;\">2</span><span style=\"background-color:inherit;\">])&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">else</span><span style=\"background-color:inherit;\">:&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xcord2.append(dataArr[i,<span class=\"number\" style=\"background-color:inherit;\">1</span><span style=\"background-color:inherit;\">])&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ycord2.append(dataArr[i,<span class=\"number\" style=\"background-color:inherit;\">2</span><span style=\"background-color:inherit;\">])&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;fig&nbsp;=&nbsp;plt.figure()&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;ax&nbsp;=&nbsp;fig.add_subplot(<span class=\"number\" style=\"background-color:inherit;\">111</span><span style=\"background-color:inherit;\">)&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;ax.scatter(xcord1,ycord1,s=<span class=\"number\" style=\"background-color:inherit;\">30</span><span style=\"background-color:inherit;\">,c=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\'red\'</span><span style=\"background-color:inherit;\">,&nbsp;marker=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\'s\'</span><span style=\"background-color:inherit;\">)&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;ax.scatter(xcord2,ycord2,s=<span class=\"number\" style=\"background-color:inherit;\">30</span><span style=\"background-color:inherit;\">,c=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"green\"</span><span style=\"background-color:inherit;\">)&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;arange(-<span class=\"number\" style=\"background-color:inherit;\">3.0</span><span style=\"background-color:inherit;\">,</span><span class=\"number\" style=\"background-color:inherit;\">3.0</span><span style=\"background-color:inherit;\">,</span><span class=\"number\" style=\"background-color:inherit;\">0.1</span><span style=\"background-color:inherit;\">)&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;(-weights[<span class=\"number\" style=\"background-color:inherit;\">0</span><span style=\"background-color:inherit;\">]-weights[</span><span class=\"number\" style=\"background-color:inherit;\">1</span><span style=\"background-color:inherit;\">]&nbsp;*&nbsp;x)/weights[</span><span class=\"number\" style=\"background-color:inherit;\">2</span><span style=\"background-color:inherit;\">]&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;ax.plot(x,y)&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;plt.xlabel(<span class=\"string\" style=\"color:blue;background-color:inherit;\">\"x1\"</span><span style=\"background-color:inherit;\">)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#X轴的标签</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;plt.ylabel(<span class=\"string\" style=\"color:blue;background-color:inherit;\">\"x2\"</span><span style=\"background-color:inherit;\">)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#Y轴的标签</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;plt.show()&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">if</span><span style=\"background-color:inherit;\">&nbsp;__name__==</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"__main__\"</span><span style=\"background-color:inherit;\">:&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;dataMatrix,labelMat&nbsp;=&nbsp;loadDataSet()&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;=&nbsp;gradAscent(dataMatrix,&nbsp;labelMat)&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;plotBestFit(weight,dataMatrix,labelMat)&nbsp;&nbsp;</span> \r\n				</li>\r\n			</ol>\r\n		</div>\r\n<span style=\"font-family:&quot;\"></span> \r\n		<div>\r\n			显示效果图：\r\n		</div>\r\n		<div>\r\n			<img src=\"http://img.blog.csdn.net/20160425000719958?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /><br />\r\n		</div>\r\n<br />\r\n		<h2>\r\n			<a name=\"t6\"></a><span style=\"font-family:&quot;\"><span style=\"font-family:微软雅黑;font-size:14px;line-height:21px;\">2.2随机梯度上升算法</span></span> \r\n		</h2>\r\n	</div>\r\n	<div>\r\n		<span style=\"font-family:&quot;\"><span style=\"font-family:微软雅黑;line-height:21px;\"></span></span> \r\n		<div style=\"font-size:14px;font-family:微软雅黑;\">\r\n			&nbsp; &nbsp; &nbsp; 梯度上升算法在每次更新回归系数时都需要遍历整个数据集，该方法在处理100个左右的数据集尚可，但如果数据量增大，那该方法的计算量就太大了，有一种改进方法是一次仅用一个样本点来更新回归系数，该方法称为随机梯度上升算法，由于可以在新样本到来时对分类器进行增量式更新，因而随机梯度上升算法是一个在线学习算法。\r\n		</div>\r\n		<div style=\"font-size:14px;font-family:微软雅黑;\">\r\n			随机梯度上升算法的代码如下：\r\n		</div>\r\n		<div style=\"font-family:微软雅黑;\">\r\n			<div class=\"dp-highlighter bg_python\" style=\"font-family:Consolas, &quot;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n				<div class=\"bar\">\r\n					<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n						<b>[python]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"CopyToClipboard\">copy</a> \r\n						<div>\r\n						</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1660464\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1660464/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span> \r\n					</div>\r\n				</div>\r\n				<ol class=\"dp-py\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n					<li class=\"alt\" style=\"color:inherit;\">\r\n						<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">&lt;span&nbsp;style=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"font-size:18px;\"</span><span style=\"background-color:inherit;\">&gt;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#随机梯度上升算法求回归系数</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n					</li>\r\n					<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n						<span style=\"color:black;background-color:inherit;\"><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">def</span><span style=\"background-color:inherit;\">&nbsp;stocGradAscent0(dataMatrix,labelMat):&nbsp;&nbsp;&nbsp;</span></span> \r\n					</li>\r\n					<li class=\"alt\" style=\"color:inherit;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;dataMatrix&nbsp;=&nbsp;array(dataMatrix)&nbsp;&nbsp;</span> \r\n					</li>\r\n					<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;m,n&nbsp;=&nbsp;shape(dataMatrix)&nbsp;&nbsp;</span> \r\n					</li>\r\n					<li class=\"alt\" style=\"color:inherit;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;alpha&nbsp;=&nbsp;<span class=\"number\" style=\"background-color:inherit;\">0.01</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n					</li>\r\n					<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;weights&nbsp;=&nbsp;ones(n)&nbsp;&nbsp;</span> \r\n					</li>\r\n					<li class=\"alt\" style=\"color:inherit;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">for</span><span style=\"background-color:inherit;\">&nbsp;i&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">in</span><span style=\"background-color:inherit;\">&nbsp;range(</span><span class=\"number\" style=\"background-color:inherit;\">0</span><span style=\"background-color:inherit;\">,m):&nbsp;&nbsp;</span></span> \r\n					</li>\r\n					<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;=&nbsp;sigmoid(sum(dataMatrix[i]*weights))&nbsp;&nbsp;</span> \r\n					</li>\r\n					<li class=\"alt\" style=\"color:inherit;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error&nbsp;=&nbsp;labelMat[i]&nbsp;-&nbsp;h&nbsp;&nbsp;</span> \r\n					</li>\r\n					<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weights&nbsp;=&nbsp;weights&nbsp;+&nbsp;alpha&nbsp;*&nbsp;&nbsp;error&nbsp;*&nbsp;dataMatrix[i]&nbsp;&nbsp;</span> \r\n					</li>\r\n					<li class=\"alt\" style=\"color:inherit;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span> \r\n					</li>\r\n					<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">return</span><span style=\"background-color:inherit;\">&nbsp;weights&lt;/span&gt;&lt;span&nbsp;style=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"font-size:&nbsp;14px;\"</span><span style=\"background-color:inherit;\">&gt;&nbsp;&nbsp;</span></span> \r\n					</li>\r\n					<li class=\"alt\" style=\"color:inherit;\">\r\n						<span style=\"color:black;background-color:inherit;\">&lt;/span&gt;&nbsp;&nbsp;</span> \r\n					</li>\r\n				</ol>\r\n			</div>\r\n			<div>\r\n				<br />\r\n			</div>\r\nmain函数调用代码：\r\n		</div>\r\n		<div style=\"font-family:微软雅黑;\">\r\n			<div class=\"dp-highlighter bg_python\" style=\"font-family:Consolas, &quot;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n				<div class=\"bar\">\r\n					<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n						<b>[python]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"CopyToClipboard\">copy</a> \r\n						<div>\r\n						</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1660464\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1660464/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span> \r\n					</div>\r\n				</div>\r\n				<ol class=\"dp-py\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n					<li class=\"alt\" style=\"color:inherit;\">\r\n						<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#随机梯度上升算法</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n					</li>\r\n					<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;=&nbsp;stocGradAscent0(dataMatrix,&nbsp;labelMat)&nbsp;&nbsp;</span> \r\n					</li>\r\n					<li class=\"alt\" style=\"color:inherit;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">print</span><span style=\"background-color:inherit;\">&nbsp;weight&nbsp;&nbsp;</span></span> \r\n					</li>\r\n					<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n						<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;plotBestFit(weight,dataMatrix,labelMat)&nbsp;&nbsp;</span> \r\n					</li>\r\n				</ol>\r\n			</div>\r\n			<div>\r\n				<br />\r\n			</div>\r\n显示效果图如下\r\n		</div>\r\n		<div style=\"font-family:微软雅黑;\">\r\n			<img src=\"http://img.blog.csdn.net/20160425000842891?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /><br />\r\n			<h2>\r\n				<a name=\"t7\"></a><span style=\"font-size:14px;line-height:21px;\">2.3改进版的随机梯度上升算法</span> \r\n			</h2>\r\n		</div>\r\n<span style=\"font-family:微软雅黑;font-size:14px;line-height:21px;\">存在一些不能正确分类的点样本点（数据集并非线性可分），在每次迭代时会引发系数的剧烈变化。我们期望算法能够避免来回波动，从而收列到某个值</span><br />\r\n	</div>\r\n	<div>\r\n		<span style=\"font-family:&quot;\"><span style=\"font-family:微软雅黑;line-height:21px;\"><span style=\"line-height:21px;\"></span></span></span> \r\n		<div class=\"dp-highlighter bg_python\" style=\"font-family:Consolas, &quot;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n			<div class=\"bar\">\r\n				<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n					<b>[python]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"CopyToClipboard\">copy</a> \r\n					<div>\r\n					</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1660464\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1660464/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span> \r\n				</div>\r\n			</div>\r\n			<ol class=\"dp-py\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">&lt;span&nbsp;style=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"font-size:18px;\"</span><span style=\"background-color:inherit;\">&gt;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#改进版的随机梯度上升算法</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">def</span><span style=\"background-color:inherit;\">&nbsp;stocGradAscent1(dataMatrix,labelMat,numIter=</span><span class=\"number\" style=\"background-color:inherit;\">150</span><span style=\"background-color:inherit;\">):&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;m,n&nbsp;=&nbsp;shape(dataMatrix)&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;weights&nbsp;=&nbsp;ones(n)&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">for</span><span style=\"background-color:inherit;\">&nbsp;i&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">in</span><span style=\"background-color:inherit;\">&nbsp;range(</span><span class=\"number\" style=\"background-color:inherit;\">0</span><span style=\"background-color:inherit;\">,numIter):&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataIndex&nbsp;=&nbsp;range(m)&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">for</span><span style=\"background-color:inherit;\">&nbsp;j&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">in</span><span style=\"background-color:inherit;\">&nbsp;range(</span><span class=\"number\" style=\"background-color:inherit;\">0</span><span style=\"background-color:inherit;\">,m):&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha&nbsp;=&nbsp;<span class=\"number\" style=\"background-color:inherit;\">4</span><span style=\"background-color:inherit;\">/(</span><span class=\"number\" style=\"background-color:inherit;\">1.0</span><span style=\"background-color:inherit;\">+j+i)+</span><span class=\"number\" style=\"background-color:inherit;\">0.01</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#(1)</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;randIndex&nbsp;=&nbsp;int(random.uniform(<span class=\"number\" style=\"background-color:inherit;\">0</span><span style=\"background-color:inherit;\">,len(dataIndex)))&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#(2)</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;=&nbsp;sigmoid(sum(dataMatrix[randIndex]&nbsp;*&nbsp;weights))&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error&nbsp;=&nbsp;labelMat[randIndex]&nbsp;-&nbsp;h&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weights&nbsp;=&nbsp;weights&nbsp;+&nbsp;alpha&nbsp;*&nbsp;error&nbsp;*&nbsp;dataMatrix[randIndex]&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">del</span><span style=\"background-color:inherit;\">(dataIndex[randIndex])&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">return</span><span style=\"background-color:inherit;\">&nbsp;weights&nbsp;&nbsp;&nbsp;&lt;/span&gt;&lt;span&nbsp;style=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"font-size:&nbsp;14px;\"</span><span style=\"background-color:inherit;\">&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&lt;/span&gt;&nbsp;&nbsp;</span> \r\n				</li>\r\n			</ol>\r\n		</div>\r\n		<div>\r\n			(1)：alpha在每次<span> </span>迭代的时候都会调整，会缓解数据波动和高频波动，另外alpha会随着迭代次数不断减小，但永远不会减小到0，这是因为（1）中存在一个常数项，这样做的目的是保证在多次迭代后新数据仍有一定的影响力，如果处理的问题是动态的，可以适当加大上边的常数项，来保证新的书获得更大的回归系数，另外一点值得注意的是，在降低alpha的函数中，alpha每次减小1/(j+i)，其中j是迭代次数，i是样本点的下标，这样当j&lt;&lt;max(i)时，alpha就不是严格下降的，避免参数的严格下降也是常见于模拟退火算法等其他优化算法中\r\n		</div>\r\n		<div>\r\n			(2)：通过随机选择样本来更新回归系数，这样方法将减小周期性波动，每次随机从列表中选出一个值，然后从列表中删除该值。\r\n		</div>\r\n		<div>\r\n			此外增加了一个迭代次数作为第三个参数，如果不给定的话，默认是150次。\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\nmain函数调用代码：\r\n	</div>\r\n	<div>\r\n		<span style=\"font-family:&quot;\"><span style=\"font-family:微软雅黑;line-height:21px;\"><span style=\"line-height:21px;\"></span></span></span> \r\n		<div class=\"dp-highlighter bg_python\" style=\"font-family:Consolas, &quot;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n			<div class=\"bar\">\r\n				<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n					<b>[python]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"CopyToClipboard\">copy</a> \r\n					<div>\r\n					</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1660464\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1660464/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span> \r\n				</div>\r\n			</div>\r\n			<ol class=\"dp-py\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">&lt;span&nbsp;style=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"font-size:18px;\"</span><span style=\"background-color:inherit;\">&gt;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">#改进版的随机梯度上升算法</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;=&nbsp;stocGradAscent1(array(dataMatrix),&nbsp;labelMat)&nbsp;&nbsp;</span> \r\n				</li>\r\n				<li class=\"alt\" style=\"color:inherit;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">print</span><span style=\"background-color:inherit;\">&nbsp;weight&nbsp;&nbsp;</span></span> \r\n				</li>\r\n				<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n					<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;plotBestFit(weight,dataMatrix,labelMat)&lt;/span&gt;&nbsp;&nbsp;</span> \r\n				</li>\r\n			</ol>\r\n		</div>\r\n<br />\r\n显示效果图如下：\r\n	</div>\r\n	<div>\r\n		<span style=\"font-family:&quot;\"><span style=\"font-family:微软雅黑;line-height:21px;\"><img src=\"http://img.blog.csdn.net/20160425141239014?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /><br />\r\n</span></span> \r\n	</div>\r\n	<div>\r\n		<span style=\"font-family:微软雅黑;\"><span style=\"line-height:21px;\"><br />\r\n</span></span> \r\n	</div>\r\n	<div>\r\n		<span style=\"font-family:微软雅黑;\"><span style=\"line-height:21px;\"><br />\r\n</span></span> \r\n	</div>\r\n	<div>\r\n		<span style=\"font-family:微软雅黑;\"><span style=\"line-height:21px;\">数据集内容如下：</span></span> \r\n	</div>\r\n	<div>\r\n		-0.017612 &nbsp; 14.053064 &nbsp; 0 &nbsp;<br />\r\n-1.395634 &nbsp; 4.662541 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.752157 &nbsp; 6.538620<span> </span>0 &nbsp;<br />\r\n-1.322371 &nbsp; 7.152853 &nbsp; &nbsp;0 &nbsp;<br />\r\n0.423363<span> </span>11.054677 &nbsp; 0 &nbsp;<br />\r\n0.406704 &nbsp; &nbsp;7.067335 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.667394 &nbsp; &nbsp;12.741452 &nbsp; 0 &nbsp;<br />\r\n-2.460150 &nbsp; 6.866805 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.569411 &nbsp; &nbsp;9.548755 &nbsp; &nbsp;0 &nbsp;<br />\r\n-0.026632 &nbsp; 10.427743 &nbsp; 0 &nbsp;<br />\r\n0.850433 &nbsp; &nbsp;6.920334 &nbsp; &nbsp;1 &nbsp;<br />\r\n1.347183 &nbsp; &nbsp;13.175500 &nbsp; 0 &nbsp;<br />\r\n1.176813 &nbsp; &nbsp;3.167020 &nbsp; &nbsp;1 &nbsp;<br />\r\n-1.781871 &nbsp; 9.097953 &nbsp; &nbsp;0 &nbsp;<br />\r\n-0.566606 &nbsp; 5.749003 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.931635 &nbsp; &nbsp;1.589505 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.024205 &nbsp; 6.151823 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.036453 &nbsp; 2.690988 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.196949 &nbsp; 0.444165 &nbsp; &nbsp;1 &nbsp;<br />\r\n1.014459 &nbsp; &nbsp;5.754399 &nbsp; &nbsp;1 &nbsp;<br />\r\n1.985298 &nbsp; &nbsp;3.230619 &nbsp; &nbsp;1 &nbsp;<br />\r\n-1.693453 &nbsp; -0.557540 &nbsp; 1 &nbsp;<br />\r\n-0.576525 &nbsp; 11.778922 &nbsp; 0 &nbsp;<br />\r\n-0.346811 &nbsp; -1.678730 &nbsp; 1 &nbsp;<br />\r\n-2.124484 &nbsp; 2.672471 &nbsp; &nbsp;1 &nbsp;<br />\r\n1.217916 &nbsp; &nbsp;9.597015 &nbsp; &nbsp;0 &nbsp;<br />\r\n-0.733928 &nbsp; 9.098687 &nbsp; &nbsp;0 &nbsp;<br />\r\n-3.642001 &nbsp; -1.618087 &nbsp; 1 &nbsp;<br />\r\n0.315985 &nbsp; &nbsp;3.523953 &nbsp; &nbsp;1 &nbsp;<br />\r\n1.416614 &nbsp; &nbsp;9.619232 &nbsp; &nbsp;0 &nbsp;<br />\r\n-0.386323 &nbsp; 3.989286 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.556921 &nbsp; &nbsp;8.294984 &nbsp; &nbsp;1 &nbsp;<br />\r\n1.224863 &nbsp; &nbsp;11.587360 &nbsp; 0 &nbsp;<br />\r\n-1.347803 &nbsp; -2.406051 &nbsp; 1 &nbsp;<br />\r\n1.196604 &nbsp; &nbsp;4.951851 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.275221 &nbsp; &nbsp;9.543647 &nbsp; &nbsp;0 &nbsp;<br />\r\n0.470575 &nbsp; &nbsp;9.332488 &nbsp; &nbsp;0 &nbsp;<br />\r\n-1.889567 &nbsp; 9.542662 &nbsp; &nbsp;0 &nbsp;<br />\r\n-1.527893 &nbsp; 12.150579 &nbsp; 0 &nbsp;<br />\r\n-1.185247 &nbsp; 11.309318 &nbsp; 0 &nbsp;<br />\r\n-0.445678 &nbsp; 3.297303 &nbsp; &nbsp;1 &nbsp;<br />\r\n1.042222 &nbsp; &nbsp;6.105155 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.618787 &nbsp; 10.320986 &nbsp; 0 &nbsp;<br />\r\n1.152083 &nbsp; &nbsp;0.548467 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.828534 &nbsp; &nbsp;2.676045 &nbsp; &nbsp;1 &nbsp;<br />\r\n-1.237728 &nbsp; 10.549033 &nbsp; 0 &nbsp;<br />\r\n-0.683565 &nbsp; -2.166125 &nbsp; 1 &nbsp;<br />\r\n0.229456 &nbsp; &nbsp;5.921938 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.959885 &nbsp; 11.555336 &nbsp; 0 &nbsp;<br />\r\n0.492911 &nbsp; &nbsp;10.993324 &nbsp; 0 &nbsp;<br />\r\n0.184992 &nbsp; &nbsp;8.721488 &nbsp; &nbsp;0 &nbsp;<br />\r\n-0.355715 &nbsp; 10.325976 &nbsp; 0 &nbsp;<br />\r\n-0.397822 &nbsp; 8.058397 &nbsp; &nbsp;0 &nbsp;<br />\r\n0.824839 &nbsp; &nbsp;13.730343 &nbsp; 0 &nbsp;<br />\r\n1.507278 &nbsp; &nbsp;5.027866 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.099671 &nbsp; &nbsp;6.835839 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.344008 &nbsp; 10.717485 &nbsp; 0 &nbsp;<br />\r\n1.785928 &nbsp; &nbsp;7.718645 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.918801 &nbsp; 11.560217 &nbsp; 0 &nbsp;<br />\r\n-0.364009 &nbsp; 4.747300 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.841722 &nbsp; 4.119083 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.490426 &nbsp; &nbsp;1.960539 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.007194 &nbsp; 9.075792 &nbsp; &nbsp;0 &nbsp;<br />\r\n0.356107 &nbsp; &nbsp;12.447863 &nbsp; 0 &nbsp;<br />\r\n0.342578 &nbsp; &nbsp;12.281162 &nbsp; 0 &nbsp;<br />\r\n-0.810823 &nbsp; -1.466018 &nbsp; 1 &nbsp;<br />\r\n2.530777 &nbsp; &nbsp;6.476801 &nbsp; &nbsp;1 &nbsp;<br />\r\n1.296683 &nbsp; &nbsp;11.607559 &nbsp; 0 &nbsp;<br />\r\n0.475487 &nbsp; &nbsp;12.040035 &nbsp; 0 &nbsp;<br />\r\n-0.783277 &nbsp; 11.009725 &nbsp; 0 &nbsp;<br />\r\n0.074798 &nbsp; &nbsp;11.023650 &nbsp; 0 &nbsp;<br />\r\n-1.337472 &nbsp; 0.468339 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.102781 &nbsp; 13.763651 &nbsp; 0 &nbsp;<br />\r\n-0.147324 &nbsp; 2.874846 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.518389 &nbsp; &nbsp;9.887035 &nbsp; &nbsp;0 &nbsp;<br />\r\n1.015399 &nbsp; &nbsp;7.571882 &nbsp; &nbsp;0 &nbsp;<br />\r\n-1.658086 &nbsp; -0.027255 &nbsp; 1 &nbsp;<br />\r\n1.319944 &nbsp; &nbsp;2.171228 &nbsp; &nbsp;1 &nbsp;<br />\r\n2.056216 &nbsp; &nbsp;5.019981 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.851633 &nbsp; 4.375691 &nbsp; &nbsp;1 &nbsp;<br />\r\n-1.510047 &nbsp; 6.061992 &nbsp; &nbsp;0 &nbsp;<br />\r\n-1.076637 &nbsp; -3.181888 &nbsp; 1 &nbsp;<br />\r\n1.821096 &nbsp; &nbsp;10.283990 &nbsp; 0 &nbsp;<br />\r\n3.010150 &nbsp; &nbsp;8.401766 &nbsp; &nbsp;1 &nbsp;<br />\r\n-1.099458 &nbsp; 1.688274 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.834872 &nbsp; -1.733869 &nbsp; 1 &nbsp;<br />\r\n-0.846637 &nbsp; 3.849075 &nbsp; &nbsp;1 &nbsp;<br />\r\n1.400102 &nbsp; &nbsp;12.628781 &nbsp; 0 &nbsp;<br />\r\n1.752842 &nbsp; &nbsp;5.468166 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.078557 &nbsp; &nbsp;0.059736 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.089392 &nbsp; &nbsp;-0.715300 &nbsp; 1 &nbsp;<br />\r\n1.825662 &nbsp; &nbsp;12.693808 &nbsp; 0 &nbsp;<br />\r\n0.197445 &nbsp; &nbsp;9.744638 &nbsp; &nbsp;0 &nbsp;<br />\r\n0.126117 &nbsp; &nbsp;0.922311 &nbsp; &nbsp;1 &nbsp;<br />\r\n-0.679797 &nbsp; 1.220530 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.677983 &nbsp; &nbsp;2.556666 &nbsp; &nbsp;1 &nbsp;<br />\r\n0.761349 &nbsp; &nbsp;10.693862 &nbsp; 0 &nbsp;<br />\r\n-2.168791 &nbsp; 0.143632 &nbsp; &nbsp;1 &nbsp;<br />\r\n1.388610 &nbsp; &nbsp;9.341997 &nbsp; &nbsp;0 &nbsp;<br />\r\n0.317029 &nbsp; &nbsp;14.739025 &nbsp; 0 &nbsp;\r\n	</div>\r\n</div>\r\n<div class=\"bdsharebuttonbox tracking-ad bdshare-button-style0-16\" style=\"font-family:&quot;\">\r\n	<a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"bds_more\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"bds_qzone\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"bds_tsina\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"bds_tqq\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"bds_renren\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/gamer_gyt/article/details/51236978#\" class=\"bds_weixin\" target=\"_blank\"></a> \r\n</div>\r\n<div id=\"digg\" style=\"text-align:center;font-family:&quot;\">\r\n</div>',1),(2,'沈阳东网科技和福建卓智网络面试心得','234234',7,'2016-11-09 14:12:00.000000','<div id=\"article_content\" class=\"article_content\" style=\"margin:35px 0px;font-size:15px;color:#555555;font-family:&quot;\">\r\n	<span style=\"font-size:14px;\">经过这两次面试现在做出以下</span><span style=\"font-size:14px;\"><span style=\"color:#FF0000;\">总结</span></span><span style=\"font-size:14px;\">：</span><br />\r\n	<p>\r\n		<span style=\"font-size:14px;\"><br />\r\n</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">1<span style=\"font-size:18px;\">：问题的展开</span></span>\r\n	</p>\r\n<span style=\"font-size:14px;\">从头到尾面试官所展开的一切问题都是紧紧围绕着你的简历展开的，所以对于简历尽量不要弄虚作假，如果说弄虚作假的话，一定要圆满，即对于简历上写的内容要做到九分了解，因为一旦你回答或者解释不了简历上的问题，就会被赋予抄袭or假冒的“罪名”</span><br />\r\n<br />\r\n<strong><span style=\"font-size:18px;\">2：对于简历上内容的讨论</span></strong><br />\r\n	<p>\r\n		<span style=\"font-size:14px;\">这一点要根据面试官的身份而定，不同的面试官会有不同的问问题的风格，但所有的面试官都是基于简历出发的，就我自己所经过的这两次面试而言，我的直觉判断是第一次提问的应该不是项目经理，因为他对项目的的相关问题并没有涉及，但第二次所面临的情况就完全不同了，他基于的话题就是项目，更加注重的是这种逻辑思维能力，以致于我在准备了半天时间的情况下，仍然是一无所措，比第一次的问题只有更糟。下边就谈一下这两次的面试所涉及的大部分问题</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\"><br />\r\n</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">(</span><span style=\"font-size:14px;\">1)这个面试官（A）提问的有（依据个人简历而言，不同的人不一样）：</span>\r\n	</p>\r\n<span style=\"font-size:14px;\"></span><span style=\"font-size:14px;\">&nbsp; &nbsp; 1. hadoop的学习情况 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; PS：一定要展示自学能力和团队意识，变相的等于自我介绍了</span><br />\r\n<span style=\"font-size:14px;\"></span><span style=\"font-size:14px;\">&nbsp; &nbsp; 2. MR编程模型的具体过程 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;PS：我回答出来了，但感觉说的还是比较笼统，因为这个过程用了不到一分钟</span><br />\r\n<span style=\"font-size:14px;\"></span><span style=\"font-size:14px;\">&nbsp; &nbsp; 3. hadoop一代中MR的角色是JobTracker和TaskTracker，那么第二代MR中，角色是什么？ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;PS：没有回答出来，因为平时学习MR过程中，并没有太关注这个东西，从某种层面上折射出的是学知识，太过于死板，学习某种事务处于较表层面，对于其机制不了解，也不能完整，正确的表达出来</span><br />\r\n<span style=\"font-size:14px;\"></span><span style=\"font-size:14px;\">&nbsp; &nbsp; 4. 关系型数据库行健的设计（这个问题记不清了） &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;PS：由于问题不太懂，所以直接回答不会</span><br />\r\n<span style=\"font-size:14px;\"></span><span style=\"font-size:14px;\">&nbsp; &nbsp; 5. Python Django框架介绍 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;PS：我回答出来了，但感觉说的还是比较笼统，因为这个过程用了不到一分钟</span><br />\r\n<span style=\"font-size:14px;\"></span><span style=\"font-size:14px;\">&nbsp; &nbsp; 6. 项目开发环境 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;PS：尽量使用Linux操作系统，因为企业更注重的是linux&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"></span><span style=\"font-size:14px;\">&nbsp; &nbsp; 7. Linux中查看进程的命令 &nbsp; PS：小编不会</span><br />\r\n<span style=\"font-size:14px;\"></span><span style=\"font-size:14px;\">&nbsp; &nbsp; 8. 出了一道ACM算法题（题目描述：N 个男生和N个女生站成一列，保证每个男生往前看的时候，前边看到的男生的数目都要比女生少，问有多少种组合方式） &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;PS：想了一会，车道数据结构的队列了，但这和队列明显无关，最后面试官给引导到递归上了，但是还是没有答上来</span><br />\r\n<br />\r\n<span style=\"font-size:14px;\">第一次面试总结：面试前需要做好准备（必须准备的包括：个人介绍，简历上所写的技术要做到九分熟悉），开发环境尽量用linux，熟悉使用里linux的常用命令，在学习知识点的过程中，要做到熟悉前因后果，为什么这么处理</span><br />\r\n	<p>\r\n		<span style=\"font-size:14px;\"><br />\r\n</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">（2）这个面试官（B）应该是个项目经理级别的</span><span style=\"font-size:14px;\">，因为在他的眼中大小皆为项目，项目观念特别重，主要是你对这个项目流程分析，概述，准备工作等，最终的结果是我对于他的提问没有一个是完完整整的给回答出来的，都说了一点，大概意思也都知道，但就是写不出来，讲不明白</span>\r\n	</p>\r\n<br />\r\n<span style=\"font-size:14px;\">第二次面试总结：培养自己的项目能力和逻辑思维能力，对于一个项目，要思考的透彻，每一步怎么做，实现了什么，实现的方法，以及要达到的效果</span><br />\r\n<span style=\"font-size:14px;\">平时学习过程中注重总结，树立凡事皆项目的态度，认真做好每一个项目，并能给别人讲的明白透彻，完全吸收到自己的脑子里</span><br />\r\n<br />\r\n<strong><span style=\"font-size:18px;\">3：面试的首尾</span></strong><br />\r\n<span style=\"font-size:14px;\">面试的收尾一版是以数据结构或者算法或者编程代码为结束值</span><br />\r\n<span style=\"font-size:14px;\">PS ： 好好复习数据结构，每一个概念都要记得特别清晰，同时对于经典的算法（广度，深度等）</span><br />\r\n<strong><span style=\"font-size:18px;\"><br />\r\n4：自身的反思</span></strong><br />\r\n<span style=\"font-size:14px;\">对于要面试的职位一无所知，不知道是不是所有的面试官感觉你的简历符合职位后，他就就简历上的内容展开讨论？</span><br />\r\n<br />\r\n<span style=\"font-size:14px;\">经过这两次面试，我想我已经知道了我下一步该怎么做，在学习的过程中，注意把每个地方都搞明白，树立凡事皆项目的态度观念，项目之后认真总结与反馈</span>\r\n</div>\r\n<div class=\"bdsharebuttonbox tracking-ad bdshare-button-style0-16\" style=\"font-family:&quot;\">\r\n	<a href=\"http://blog.csdn.net/gamer_gyt/article/details/50098287#\" class=\"bds_more\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/gamer_gyt/article/details/50098287#\" class=\"bds_qzone\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/gamer_gyt/article/details/50098287#\" class=\"bds_tsina\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/gamer_gyt/article/details/50098287#\" class=\"bds_tqq\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/gamer_gyt/article/details/50098287#\" class=\"bds_renren\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/gamer_gyt/article/details/50098287#\" class=\"bds_weixin\" target=\"_blank\"></a>\r\n</div>\r\n<div id=\"digg\" style=\"text-align:center;font-family:&quot;\">\r\n</div>',9),(3,'django models进行数据库增删查改','12312',4,'2016-11-13 06:59:00.000000','<div style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\">\r\n	<div>\r\n		引入models的定义\r\n	</div>\r\n	<div>\r\n		from app.models import &nbsp;myclass\r\n	</div>\r\n	<div>\r\n		class &nbsp;myclass():\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp;aa =&nbsp;&nbsp;<span style=\"font-family:&quot;\">models.</span>&nbsp;<b>CharField</b>&nbsp;<span style=\"font-family:&quot;\">(max_length=None)　</span>\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp;bb =&nbsp;&nbsp;<span style=\"font-family:&quot;\">models.</span>&nbsp;<b>CharField</b>&nbsp;<span style=\"font-family:&quot;\">(max_length=None)　</span>\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp;def __unicode__(self):\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return u\'%s %s\' %(aa,bb)\r\n	</div>\r\n</div>\r\n<span style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\"></span><span style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\"></span><span style=\"font-family:&quot;font-size:24px;color:#E53333;background-color:#FFFFFF;\">增</span><span style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\"></span><span style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\"></span><span style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\"></span>\r\n<div style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\">\r\n	<div>\r\n		<b>添加一行数据1</b>\r\n	</div>\r\n	<div>\r\n		add = myclass(aa=\'wahaha\',bb=\'hahawa\'&nbsp;<span style=\"line-height:1.5;\">)</span>\r\n	</div>\r\n	<div>\r\n		add.save() #不save无法保存到数据库\r\n	</div>\r\n	<div>\r\n		add.id #获取增加的这条数据的ID\r\n	</div>\r\n	<div>\r\n		<b>添加一行数据2</b>\r\n	</div>\r\n	<div>\r\n		myclass.objects.create(aa=\'wahaha\',bb=\'hahawa\') &nbsp;#&nbsp;<span style=\"background-color:inherit;line-height:1.5;\">同上1方法一样无需保存save</span>\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<span><br />\r\n</span>\r\n	</div>\r\n	<div>\r\n		<span style=\"color:#E53333;font-size:24px;\">删</span>\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<b>删除表中全部数据</b>\r\n		</div>\r\n		<div>\r\n			myclass.objects.all().delete()\r\n		</div>\r\n		<div>\r\n			<b>删除一条aa等于\'test\'的数据</b>\r\n		</div>\r\n		<div>\r\n			myclass.objects.get(aa=\'test\').delete()\r\n		</div>\r\n		<div>\r\n			<b>删除多条数据</b>\r\n		</div>\r\n		<div>\r\n			myclass.objects.filter(aa=\'123\').delete() #过滤出aa字段等于123的都删除\r\n		</div>\r\n		<div>\r\n			<span style=\"background-color:inherit;\"><br />\r\n</span>\r\n		</div>\r\n		<div>\r\n			<span></span><span style=\"color:#E53333;font-size:24px;background-color:inherit;\">查</span><span></span>\r\n		</div>\r\n<b>查出库中所有条数的数据</b>\r\n		<div>\r\n			myclass.objects.all()\r\n		</div>\r\n		<div>\r\n			<b>查询带字段名的所有条数数据</b>\r\n		</div>\r\n		<div>\r\n			myclass.objects.all().values()\r\n		</div>\r\n		<div>\r\n			<b>查询单挑数据</b>\r\n		</div>\r\n		<div>\r\n			myclass.objects.get(aa=\'123\') #查询aa字段中是123的这条数据,如果是多条和没有的时候会报错,尽量结合try:except使用&nbsp;\r\n		</div>\r\n		<div>\r\n			<b>查询匹配条件的多条数据</b>\r\n		</div>\r\n		<div>\r\n			myclass.objects.filter(aa=\'123\') #查询aa字段值为123的所有数据条数,括号的匹配条件可多个,以逗号分隔\r\n		</div>\r\n		<div>\r\n			<b>模糊查询</b>\r\n		</div>\r\n		<div>\r\n			<span style=\"line-height:1.5;\">myclass.objects</span>&nbsp;<span style=\"line-height:1.5;\">.filter(aa</span>__contains=\"1\") #查询aa字段中值包含\'1\'的数据,例如aa字段值为 123 154 这两条都能匹配\r\n		</div>\r\n		<div>\r\n			<b>根据字段内容排序后展示数据</b>\r\n		</div>\r\n		<div>\r\n			myclass.objects.order_by(\'aa\') &nbsp;#根据aa字段的内容进行数据排序,会根据字母和数字排序\r\n		</div>\r\n		<div>\r\n			<b>根据字段内容逆向排序后展示数据,加一个负号</b>\r\n		</div>\r\n		<div>\r\n		</div>\r\n	</div>\r\n	<div>\r\n		<span style=\"color:#000000;font-size:14px;\">myclass.objects</span>&nbsp;<span style=\"color:#000000;font-size:14px;\">.order_by(\'-aa\'</span>&nbsp;<span style=\"color:#000000;font-size:14px;\">) &nbsp;#根据aa字段的内容进行逆向数据排序,会根据字母和数字排序</span>\r\n	</div>\r\n	<div>\r\n		<b>连锁查询,先过滤,过滤后进行逆向排序</b>\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;line-height:1.5;\"></span>\r\n	</div>\r\n</div>\r\n<span style=\"color:#3D464D;font-family:微软雅黑;font-size:14px;line-height:21px;background-color:#FFFFFF;\"><span style=\"background-color:inherit;\">myclass.objects</span><span style=\"background-color:inherit;\">.filter(aa=\'123\'</span><span style=\"background-color:inherit;\">)&nbsp;</span><span style=\"background-color:inherit;\">.order_by(\"‐aa\")</span></span><span style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\"></span>\r\n<div style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\">\r\n	<b>限制数据条数,相当于mysql limit</b>\r\n</div>\r\n<div style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\">\r\n	myclass.objects.filter(aa=\'123\')[0] &nbsp;#[0]显示第一条 [0:2]会显示前两条\r\n</div>\r\n<div style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\">\r\n	myclass.objects.filter(aa=\'123\').order_by(\"‐aa\")[0] #切片不支持负数,这样就数据序列倒过来的第一条,也就是最后一条数据&nbsp;<br />\r\n	<div>\r\n		<br />\r\n		<div>\r\n			<div>\r\n				<span style=\"color:#000000;font-size:14px;\"></span>\r\n			</div>\r\n<span style=\"color:#E53333;background-color:inherit;\"><span style=\"font-size:22px;background-color:inherit;\">改</span></span>\r\n		</div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<b>更新数据</b>\r\n				</div>\r\n				<div>\r\n					a = userinfo.objects.get(cellPhone=\'13133333333\') #查询一条你要更新的数据\r\n				</div>\r\n				<div>\r\n					a.cellPhone=\'3111111111111\' &nbsp; #赋值给你要更新的字段\r\n				</div>\r\n				<div>\r\n					<span style=\"background-color:inherit;line-height:1.5;\">a.save() #保存</span>\r\n				</div>\r\n				<div>\r\n					<div>\r\n						<b>更新多个字段或一个字段</b>\r\n					</div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n</div>\r\n<div style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\">\r\n	<span style=\"line-height:1.5;\">myclass.objects</span>&nbsp;<span style=\"line-height:1.5;\">.get(aa=\'123\').</span>update(aa=\'321\',bb=\"wahaha\") #update可多条\r\n</div>\r\n<div style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\">\r\n	<b>更新所有字段</b>\r\n</div>\r\n<div style=\"color:#3D464D;font-family:&quot;font-size:16px;background-color:#F8F8F8;\">\r\n	<span style=\"line-height:1.5;\">myclass.objects</span>.all().update(aa=\'8888\') #更新所有字段,更新后会显示受影响的条数\r\n</div>\r\n<div>\r\n	<br />\r\n</div>',4),(4,'django:自动化更新对象数据方法','6753',4,'2016-11-13 07:28:00.000000','<div id=\"sina_keyword_ad_area2\" class=\"articalContent   newfont_family\" style=\"font-size:14px;font-family:&quot;color:#323E32;background-color:#E4D6A7;\">\r\n	&nbsp;在django的view方法开发中，经常会发现很多工作实际上是在做前台页面和数据模型间的二传手，这些代码的重复度很高，不符合django DRY的精神，当然我们可以使用Model(**dataDict)和Model.objects.filter(pk=pk).update(**dataDict)方法来实现把REQUEST数据直接更新到模型中，但是不能我们还是会遇到诸多的困扰，比如：从前台传进来json结构数据，会把布尔型的数据表示为\'true\'和\'false\'；往往使用外键id来表示引用对象，但在实际模型修改是不接受这样的操作；各种各样的日期格式的处理。所以我自己编写一个直接将<span style=\"line-height:21px;\">REQUEST数据，更新到数据模型实例中的函数。</span>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<div>\r\n			from django.db.models.fields import BooleanField\r\n		</div>\r\n		<div>\r\n			from django.db.models.fields import DateTimeField\r\n		</div>\r\n		<div>\r\n			from django.db.models.fields.related import ForeignKey\r\n		</div>\r\n		<div>\r\n			from django.core.signing import Signer, BadSignature\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			from dateutil import parser\r\n		</div>\r\n		<div>\r\n			defaultExcludeFields = [\'id\', createBy\', \'modifyBy\', \'createTime\', \'modifyTime\']\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			stringMeanTrue = [\'true\', \'on\', \'1\', \'是\', u\'是\', \'yes\']\r\n		</div>\r\n		<div>\r\n			stringMeanFalse = [\'false\', \'off\', \'0\', \'否\', u\'否\', \'no\']\r\n		</div>\r\n		<div>\r\n			stringMeanNone = [\'null\', \'none\', \'nil\', \'\', u\'空\', \'空\']\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			def stringToBool(s):\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;\'\'\'\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;将字符转化为布尔型\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;\'\'\'\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;if s.lower() in stringMeanTrue:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return True\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;if s.lower() in stringMeanFalse:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return False\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;raise Exception(\'无法识别的布尔字符串\')\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			def getForeignObject(field, id):\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;\'\'\'\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;根据一个外键定义和一个对象id找到对应的对象实例\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;\'\'\'\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;return field.rel.to.objects.get(id=id)\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			def updateModelInstance(modelInst, dataDict, excludeFields=defaultExcludeFields, tryUnsigned=False):\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;\'\'\'\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;通过一个字典更新一个model实例的方法\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;虽然我们可以用Model(**dataDict)和Model.objects.filter(pk=pk).update(**dataDict)方法来实现更新此功能，\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;但是有时我们处理的是来自request的数据时还是会遇到很多的困扰，比如bool型的数据被表示成\'true\'和\'false\'，\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;还有就是外键被表示成一个id等问题，还有日期格式的甄别处理。\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;\'\'\'\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;model = modelInst.__class__\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;fields = zip(*model._meta.get_fields_with_model())[0]\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;signer = Signer()\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;for field in fields:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 不处理id,创建人,创建时间等字段\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if field.auto_created or field.name in excludeFields:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 如果field不再提供的数据中就不处理\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if not field.name in dataDict:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 读取数据字段中存放的值\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = dataDict[field.name]\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 特殊处理bool型的数据\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if type(field) == BooleanField:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if type(value) in [str, unicode]:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = stringToBool(value)\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 外键的特殊处理\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if type(field) == ForeignKey:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if type(value) in [int, float]:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = getForeignObject(field, value)\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if type(value) in [str, unicode]:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if value.lower() not in stringMeanNone:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 如果指定了tryUnsigned,尝试检查id是否是数字签名过的\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if tryUnsigned:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueUnsigned = signer.unsign(value)\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = valueUnsigned\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except BadSignature:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pass\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 调用外键加载过程\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = getForeignObject(field, value)\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = None\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 处理日期\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if type(field) == DateTimeField:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if type(value) in [str, unicode]:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if len(value) == 0:\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = parser.parse(value)\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exec (\'modelInst.%s = value\' % field.name)\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;return modelInst\r\n		</div>\r\n	</div>\r\n</div>\r\n<div id=\"share\" class=\"shareUp\" style=\"color:#323E32;font-family:Verdana, 宋体, sans-serif;background-color:#E4D6A7;\">\r\n	<div class=\"share SG_txtb\" style=\"color:#637160;\">\r\n		分享：&nbsp;\r\n		<div class=\"bshare-custom\" style=\"font-size:13px;margin-left:5px;\">\r\n			<a class=\"bshare-sinaminiblog\"></a><a class=\"bshare-weixin\"></a><a class=\"bshare-qzone\"></a><a class=\"bshare-douban\"></a><a class=\"bshare-more bshare-more-icon more-style-addthis\"></a>\r\n		</div>\r\n	</div>\r\n</div>',4),(5,'Search-guard在ELK Stack日志分析系统中','232423',0,'2016-11-13 07:29:00.000000','<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	转载请注明出处：<a href=\"http://blog.csdn.net/gamer_gyt\">http://blog.csdn.net/gamer_gyt</a>&nbsp;<br />\r\n博主微博：<a href=\"http://weibo.com/234654758\">http://weibo.com/234654758</a>&nbsp;<br />\r\nGithub：<a href=\"https://github.com/thinkgamer\">https://github.com/thinkgamer</a> \r\n</p>\r\n<hr />\r\n<h1 id=\"写在前边的话\" style=\"font-weight:100;color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"undefined\"></a><strong>写在前边的话</strong> \r\n</h1>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在之前的一篇文章中介绍了<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52896522\">Shield在Elk Stack中的权限保护</a>，但由于Shield是收费的，所以就有人给出了免费的解决方案——Search-guard\r\n</p>\r\n<hr />\r\n<h1 id=\"简单说明\" style=\"font-weight:100;color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"undefined\"></a><strong>简单说明</strong> \r\n</h1>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;search-guard是elastcisearch的一款插件，提供加密，身份验证和授权，基于search guard SSL，另外提供可插入的身份验证/授权模块，search-guard是shield的替代品，可免费提供所有的基本安全功能，其功能特性：\r\n</p>\r\n<ul style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	<li>\r\n		基于用户和角色的权限控制\r\n	</li>\r\n	<li>\r\n		支持SSL和TLS方式安全认证\r\n	</li>\r\n	<li>\r\n		支持LDAP认证\r\n	</li>\r\n</ul>\r\n<hr />\r\n<h1 id=\"环境说明\" style=\"font-weight:100;color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"undefined\"></a><strong>环境说明</strong> \r\n</h1>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	Ubuntu 16.04&nbsp;<br />\r\nElasticsearch 2.4.1&nbsp;<br />\r\nLogstash 2.4.0&nbsp;<br />\r\nKibana 4.6.1\r\n</p>\r\n<hr />\r\n<h1 id=\"部署\" style=\"font-weight:100;color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"undefined\"></a><strong>部署</strong> \r\n</h1>\r\n<h2 id=\"elasticsearch配置search-guard\" style=\"font-weight:100;color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"undefined\"></a><strong>Elasticsearch配置search-guard</strong> \r\n</h2>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	进入elasticsearch的根目录\r\n</p>\r\n<h3 id=\"安装search-guard-ssl\" style=\"font-weight:100;color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"undefined\"></a>安装search-guard-ssl\r\n</h3>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		bin/plugin install -b com.floragunn/search-guard-ssl/2.4.1.16\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	这里我们需要配置密钥和证书&nbsp;<br />\r\n依旧是在es 的根目录\r\n</p>\r\n<pre class=\"prettyprint\">git clone https:<span class=\"hljs-comment\" style=\"color:#880000;\">//github.com/floragunncom/search-guard-ssl.git</span> cd searchguard_ssl/example<span class=\"hljs-attribute\">-pki</span><span class=\"hljs-attribute\">-scripts</span> </pre>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	执行\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		./example.sh\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	会默认生成证书&nbsp;<br />\r\n当然这里我们可以执行clean.sh删除安装的东西&nbsp;<br />\r\n拷贝相应的文件到指定目录，后续会有需要\r\n</p>\r\n<pre class=\"prettyprint\"><span class=\"hljs-keyword\" style=\"color:#000088;\">cp</span> node-<span class=\"hljs-number\" style=\"color:#006666;\">0</span>-keystore<span class=\"hljs-preprocessor\" style=\"color:#444444;\">.jks</span> ../../config <span class=\"hljs-keyword\" style=\"color:#000088;\">cp</span> truststore<span class=\"hljs-preprocessor\" style=\"color:#444444;\">.jks</span> ../../config2</pre>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	编辑ec根目录下的config/elasticsearch.yml，加入\r\n</p>\r\n<pre class=\"prettyprint\"><span class=\"hljs-attribute\">searchguard.ssl.transport.keystore_filepath</span>: <span class=\"hljs-string\" style=\"color:#008800;\">node-0-keystore.jks</span> <span class=\"hljs-attribute\">searchguard.ssl.transport.keystore_password</span>: <span class=\"hljs-string\" style=\"color:#008800;\">changeit</span> <span class=\"hljs-attribute\">searchguard.ssl.transport.truststore_filepath</span>: <span class=\"hljs-string\" style=\"color:#008800;\">truststore.jks</span> <span class=\"hljs-attribute\">searchguard.ssl.transport.truststore_password</span>: <span class=\"hljs-string\" style=\"color:#008800;\">changeit</span> <span class=\"hljs-attribute\">searchguard.ssl.transport.enforce_hostname_verification</span>: <span class=\"hljs-string\" style=\"color:#008800;\">false</span> </pre>\r\n<pre class=\"prettyprint\">web访问：<a href=\"http://192.168.1.193:9200/\">http://192.168.1.193:9200/</a><span style=\"background-color:#FFFFFF;color:#555555;font-family:&quot;font-size:14px;\">&nbsp;会看到如下信息</span></pre>\r\n<pre class=\"prettyprint\">{\r\n  \"<span class=\"hljs-attribute\">name</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"M-Twins\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">cluster_name</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"elasticsearch\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">cluster_uuid</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"X6U0RRiaQ4ucBXokFj30Yw\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">version</span>\" : <span class=\"hljs-value\">{\r\n    \"<span class=\"hljs-attribute\">number</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"2.4.1\"</span></span>,\r\n    \"<span class=\"hljs-attribute\">build_hash</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"c67dc32e24162035d18d6fe1e952c4cbcbe79d16\"</span></span>,\r\n    \"<span class=\"hljs-attribute\">build_timestamp</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"2016-09-27T18:57:55Z\"</span></span>,\r\n    \"<span class=\"hljs-attribute\">build_snapshot</span>\" : <span class=\"hljs-value\"><span class=\"hljs-literal\" style=\"color:#006666;\">false</span></span>,\r\n    \"<span class=\"hljs-attribute\">lucene_version</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"5.5.2\"</span> </span>}</span>,\r\n  \"<span class=\"hljs-attribute\">tagline</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"You Know, for Search\"</span> </span>}</pre>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	web访问&nbsp;<a href=\"http://192.168.1.193:9200/_searchguard/sslinfo?pretty\">http://192.168.1.193:9200/_searchguard/sslinfo?pretty</a> \r\n</p>\r\n<pre class=\"prettyprint\">{\r\n  \"<span class=\"hljs-attribute\">principal</span>\" : <span class=\"hljs-value\"><span class=\"hljs-literal\" style=\"color:#006666;\">null</span></span>,\r\n  \"<span class=\"hljs-attribute\">peer_certificates</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"0\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_protocol</span>\" : <span class=\"hljs-value\"><span class=\"hljs-literal\" style=\"color:#006666;\">null</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_cipher</span>\" : <span class=\"hljs-value\"><span class=\"hljs-literal\" style=\"color:#006666;\">null</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_openssl_available</span>\" : <span class=\"hljs-value\"><span class=\"hljs-literal\" style=\"color:#006666;\">false</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_openssl_version</span>\" : <span class=\"hljs-value\">-<span class=\"hljs-number\" style=\"color:#006666;\">1</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_openssl_version_string</span>\" : <span class=\"hljs-value\"><span class=\"hljs-literal\" style=\"color:#006666;\">null</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_openssl_non_available_cause</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"java.lang.ClassNotFoundException: org.apache.tomcat.jni.SSL\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_provider_http</span>\" : <span class=\"hljs-value\"><span class=\"hljs-literal\" style=\"color:#006666;\">null</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_provider_transport_server</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"JDK\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_provider_transport_client</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"JDK\"</span> </span>}</pre>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	在config/elasticsearch.yml配置文件中加入\r\n</p>\r\n<pre class=\"prettyprint\"><span class=\"hljs-preprocessor\" style=\"color:#444444;\">#configure https</span> <span class=\"hljs-label\">searchguard.ssl.http.enabled:</span> true <span class=\"hljs-label\">searchguard.ssl.http.keystore_filepath:</span> node-<span class=\"hljs-number\" style=\"color:#006666;\">0</span>-keystore<span class=\"hljs-preprocessor\" style=\"color:#444444;\">.jks</span> <span class=\"hljs-label\">searchguard.ssl.http.keystore_password:</span> changeit <span class=\"hljs-label\">searchguard.ssl.http.truststore_filepath:</span> truststore<span class=\"hljs-preprocessor\" style=\"color:#444444;\">.jks</span> <span class=\"hljs-label\">searchguard.ssl.http.truststore_password:</span> changeit</pre>\r\n<p>\r\n	<a href=\"https://192.168.1.193:9200/\">https://192.168.1.193:9200/</a><span style=\"background-color:#FFFFFF;color:#555555;font-family:&quot;font-size:14px;\">&nbsp;（会提示证书错误）</span>\r\n</p>\r\n<pre class=\"prettyprint\">{\r\n  \"<span class=\"hljs-attribute\">name</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"Zero\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">cluster_name</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"elasticsearch\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">cluster_uuid</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"X6U0RRiaQ4ucBXokFj30Yw\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">version</span>\" : <span class=\"hljs-value\">{\r\n    \"<span class=\"hljs-attribute\">number</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"2.4.1\"</span></span>,\r\n    \"<span class=\"hljs-attribute\">build_hash</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"c67dc32e24162035d18d6fe1e952c4cbcbe79d16\"</span></span>,\r\n    \"<span class=\"hljs-attribute\">build_timestamp</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"2016-09-27T18:57:55Z\"</span></span>,\r\n    \"<span class=\"hljs-attribute\">build_snapshot</span>\" : <span class=\"hljs-value\"><span class=\"hljs-literal\" style=\"color:#006666;\">false</span></span>,\r\n    \"<span class=\"hljs-attribute\">lucene_version</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"5.5.2\"</span> </span>}</span>,\r\n  \"<span class=\"hljs-attribute\">tagline</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"You Know, for Search\"</span> </span>}</pre>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	<a href=\"https://192.168.1.193:9200/_searchguard/sslinfo?pretty\">https://192.168.1.193:9200/_searchguard/sslinfo?pretty</a>&nbsp;（会提示证书错误）\r\n</p>\r\n<pre class=\"prettyprint\">{\r\n  \"<span class=\"hljs-attribute\">principal</span>\" : <span class=\"hljs-value\"><span class=\"hljs-literal\" style=\"color:#006666;\">null</span></span>,\r\n  \"<span class=\"hljs-attribute\">peer_certificates</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"0\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_protocol</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"TLSv1.2\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_cipher</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_openssl_available</span>\" : <span class=\"hljs-value\"><span class=\"hljs-literal\" style=\"color:#006666;\">false</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_openssl_version</span>\" : <span class=\"hljs-value\">-<span class=\"hljs-number\" style=\"color:#006666;\">1</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_openssl_version_string</span>\" : <span class=\"hljs-value\"><span class=\"hljs-literal\" style=\"color:#006666;\">null</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_openssl_non_available_cause</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"java.lang.ClassNotFoundException: org.apache.tomcat.jni.SSL\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_provider_http</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"JDK\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_provider_transport_server</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"JDK\"</span></span>,\r\n  \"<span class=\"hljs-attribute\">ssl_provider_transport_client</span>\" : <span class=\"hljs-value\"><span class=\"hljs-string\" style=\"color:#008800;\">\"JDK\"</span> </span>}</pre>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	配置客户认证\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		searchguard.ssl.http.clientauth_mode: REQUIRE\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	出现web不能访问的情况，由于该配置是可选的，所以暂时不配置\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	<span>这里需要解释一下：</span>&nbsp;<br />\r\n默认执行的./example.sh 是以kiri为用户名的，这个我们可以通过vim example.sh可以看的出来，在elasticsearch.yml中的<em>**</em>.passwordd可以自己设置\r\n</p>\r\n<h3 id=\"安装search-guard\" style=\"font-weight:100;color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"undefined\"></a>安装search-guard\r\n</h3>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		bin/plugin install -b com.floragunn/search-guard-2/2.4.1.7\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	安装之后不做任何设置再次重启elasticsearch，web访问会出现以下状况：\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		Search Guard not initialized (SG11)\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	这是提示我们没有进行初始化&nbsp;<br />\r\n编辑config/elasticsearch.yml，加入以下两行\r\n</p>\r\n<pre class=\"prettyprint\">searchguard.authcz.admin_dn:\r\n  -<span class=\"ruby\"> <span class=\"hljs-constant\">CN</span>=kirk,<span class=\"hljs-constant\">OU</span>=client,<span class=\"hljs-constant\">O</span>=client,<span class=\"hljs-constant\">L</span>=test, <span class=\"hljs-constant\">C</span>=<span class=\"hljs-constant\">DE</span> <span class=\"hljs-comment\" style=\"color:#880000;\">#由于我们是采用的默认的example.sh进行密钥生成的</span> </span> -<span class=\"ruby\"> cn=admin,ou=<span class=\"hljs-constant\">Test</span>,ou=ou,dc=company,dc=com</span> </pre>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	此时需要重新启动elasticsearch，因为需要把我们新更改的elasticsearch.yml加载进来，否则在初始化的时候会报错&nbsp;<br />\r\n复制 kirk-keystore.jks和truststore.jks到 plugins/search-guard-2/tools目录下，然后执行初始化命令\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		./sgadmin.sh -ts truststore.jks -ks kirk-keystore.jks -cd ../sgconfig -icl\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	然后重启启动elasticsearch，web访问会提示你输入账号和密码\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	<img title=\"\" alt=\"这里写图片描述\" src=\"http://img.blog.csdn.net/20161026211443288\" style=\"height:auto;\" /> \r\n</p>\r\n<hr />\r\n<h2 id=\"logstash配置search-guard\" style=\"font-weight:100;color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"undefined\"></a><strong>Logstash配置search-guard</strong> \r\n</h2>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	依旧采用rsyslog的例子，机器配置rsyslog.conf，最后两行加入\r\n</p>\r\n<pre class=\"prettyprint\">*.* <span class=\"hljs-variable\" style=\"color:#660066;\">@@localhost</span><span class=\"hljs-symbol\" style=\"color:#006666;\">:</span><span class=\"hljs-number\" style=\"color:#006666;\">5000</span> *.* <span class=\"hljs-variable\" style=\"color:#660066;\">@localhost</span><span class=\"hljs-symbol\" style=\"color:#006666;\">:</span><span class=\"hljs-number\" style=\"color:#006666;\">5000</span> </pre>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	重启rsyslog服务&nbsp;<br />\r\n在logstash目录下编辑一个新文件rsyslog.conf，内容如下：\r\n</p>\r\n<pre class=\"prettyprint\">input {\r\n  tcp{\r\n    port =&gt; <span class=\"hljs-number\" style=\"color:#006666;\">5000</span> type =&gt; syslog\r\n  }\r\n  udp{\r\n    port =&gt; <span class=\"hljs-number\" style=\"color:#006666;\">5000</span> type =&gt; syslog\r\n  }\r\n}\r\noutput {\r\n  stdout {\r\n    codec=&gt; rubydebug\r\n  }\r\n  elasticsearch {\r\n    hosts =&gt; [<span class=\"hljs-string\" style=\"color:#008800;\">\"localhost:9200\"</span>]\r\n    ssl =&gt; <span class=\"hljs-keyword\" style=\"color:#000088;\">true</span> ssl_certificate_verification =&gt; <span class=\"hljs-keyword\" style=\"color:#000088;\">true</span> truststore =&gt; <span class=\"hljs-string\" style=\"color:#008800;\">\"/opt/elk/elasticsearch-2.4.1/config/truststore.jks\"</span> truststore_password =&gt; changeit\r\n    user =&gt; logstash\r\n    password =&gt; logstash\r\n  }\r\n}</pre>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	这里的logstash用户在 elasticsearch安装目录下的plugin/seach-guard-2/sgconfig/sg_roles.yml中&nbsp;<br />\r\n这里我们说一下sgconfig这几个文件：&nbsp;<br />\r\nSearch-guard的动态配置\r\n</p>\r\n<ul style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	<li>\r\n		sg_config.yml：配置验证器和授权后端\r\n	</li>\r\n	<li>\r\n		sg_roles.yml：定义角色和相关的权限\r\n	</li>\r\n	<li>\r\n		sg_roles_mapping.yml：将后端角色，主机和用户映射到角色\r\n	</li>\r\n	<li>\r\n		sg_internal_users.yml：用户和散列密码（使用hasher.sh哈希）\r\n	</li>\r\n	<li>\r\n		sg_action_groups.yml：组权限在一起\r\n	</li>\r\n</ul>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	接着我们设置logstash用户的权限，我们可以在sg_roles.yml中方看到logstash用户具有的权限\r\n</p>\r\n<pre class=\"prettyprint\">sg_logstash:\r\n  cluster:\r\n    -<span class=\"ruby\"> <span class=\"hljs-symbol\" style=\"color:#006666;\">indices:</span>admin/template/get </span> -<span class=\"ruby\"> <span class=\"hljs-symbol\" style=\"color:#006666;\">indices:</span>admin/template/put </span> indices:\r\n    \'logstash-*\':\r\n      \'*\':\r\n        -<span class=\"ruby\"> <span class=\"hljs-constant\">CRUD</span> </span> -<span class=\"ruby\"> <span class=\"hljs-constant\">CREATE_INDEX</span> </span> \'*beat*\':\r\n      \'*\':\r\n        -<span class=\"ruby\"> <span class=\"hljs-constant\">CRUD</span> </span> -<span class=\"ruby\"> <span class=\"hljs-constant\">CREATE_INDEX</span></span> </pre>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	启动配置文件，<a href=\"http://lib.csdn.net/base/softwaretest\" class=\"replace_word\" target=\"_blank\">测试</a>登录，elasticsearch便可以接收到rsyslog发送过来的日志\r\n</p>\r\n<hr />\r\n<h2 id=\"kibana配置\" style=\"font-weight:100;color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"undefined\"></a><strong>Kibana配置</strong> \r\n</h2>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	编辑kibana.yml\r\n</p>\r\n<pre class=\"prettyprint\"><span class=\"hljs-attribute\">server.port</span>: <span class=\"hljs-string\" style=\"color:#008800;\">5601</span> <span class=\"hljs-attribute\">server.host</span>: <span class=\"hljs-string\" style=\"color:#008800;\">\"0.0.0.0\"</span> <span class=\"hljs-attribute\">elasticsearch.url</span>: <span class=\"hljs-string\" style=\"color:#008800;\">\"https://localhost:9200\"</span> <span class=\"hljs-attribute\">elasticsearch.username</span>: <span class=\"hljs-string\" style=\"color:#008800;\">\"kibanaserver\"</span> <span class=\"hljs-attribute\">elasticsearch.password</span>: <span class=\"hljs-string\" style=\"color:#008800;\">\"kibanaserver\"</span> <span class=\"hljs-attribute\">elasticsearch.ssl.ca</span>: <span class=\"hljs-string\" style=\"color:#008800;\">/opt/elk/elasticsearch-2.4.1/search-guard-ssl/example-pki-scripts/kirk-signed.pem</span> <span class=\"hljs-attribute\">elasticsearch.ssl.verify</span>: <span class=\"hljs-string\" style=\"color:#008800;\">false</span> </pre>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	启动kibana服务，web访问，便会提示你输入密码&nbsp;<br />\r\n<img title=\"\" alt=\"这里写图片描述\" src=\"http://img.blog.csdn.net/20161026213951252\" style=\"height:auto;\" />&nbsp;<br />\r\n验证器配置：\r\n</p>\r\n<pre class=\"prettyprint\">验证器配置：\r\nVim  plugins/search-guard-<span class=\"hljs-number\" style=\"color:#006666;\">2</span>/sgconfig/sg_config.yml\r\nsearchguard:\r\n  dynamic:\r\n    http: <span class=\"hljs-keyword\" style=\"color:#000088;\">...</span> authc:\r\n      kibana_auth_domain: \r\n        enabled: true\r\n        order: <span class=\"hljs-number\" style=\"color:#006666;\">1</span> http_authenticator:\r\n          type: basic\r\n          challenge: true\r\n        authentication_backend:\r\n          type: internal\r\n    authz: <span class=\"hljs-keyword\" style=\"color:#000088;\">...</span> </pre>\r\n<hr />\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	其他的自定义角色和角色对应的权限请参考官网资料对sgconfig文件夹的几个文件进行配置即可\r\n</p>',8),(6,'Elasticsearch5.0 beta版本安装错误','14314',0,'2016-11-13 07:30:00.000000','<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	转载请注明出处：<a href=\"http://blog.csdn.net/gamer_gyt\">http://blog.csdn.net/gamer_gyt</a>&nbsp;<br />\r\n博主微博：<a href=\"http://weibo.com/234654758\">http://weibo.com/234654758</a>&nbsp;<br />\r\nGithub：<a href=\"https://github.com/thinkgamer\">https://github.com/thinkgamer</a> \r\n</p>\r\n<hr />\r\n<h2 id=\"写在前边的话\" style=\"font-weight:100;color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t0\"></a><strong>写在前边的话</strong> \r\n</h2>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	elasticsearch的alpha版本早已经在github上了，但是beta版本却是最近才正式发布，浏览其<a href=\"http://elastic.co/\">http://elastic.co/</a>&nbsp;官网，我们可以发现整个style都变了，在尝试安装elkb 5.0的过程中，出现了一点小差错，记录下来，并附上解决办法，以便更多的人能够受益。\r\n</p>\r\n<hr />\r\n<h2 id=\"错误记录\" style=\"font-weight:100;color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t1\"></a><strong>错误记录</strong> \r\n</h2>\r\n<pre class=\"prettyprint\"><span class=\"hljs-built_in\" style=\"color:#660066;\">max</span> virtual memory areas vm.max_map_count [<span class=\"hljs-number\" style=\"color:#006666;\">65530</span>] likely too low, increase <span class=\"hljs-built_in\" style=\"color:#660066;\">to</span> <span class=\"hljs-keyword\" style=\"color:#000088;\">at</span> least [<span class=\"hljs-number\" style=\"color:#006666;\">262144</span>] <span class=\"hljs-built_in\" style=\"color:#660066;\">max</span> <span class=\"hljs-built_in\" style=\"color:#660066;\">file</span> descriptors [<span class=\"hljs-number\" style=\"color:#006666;\">4096</span>] <span class=\"hljs-keyword\" style=\"color:#000088;\">for</span> elasticsearch <span class=\"hljs-built_in\" style=\"color:#660066;\">process</span> likely too low, increase <span class=\"hljs-built_in\" style=\"color:#660066;\">to</span> <span class=\"hljs-keyword\" style=\"color:#000088;\">at</span> least [<span class=\"hljs-number\" style=\"color:#006666;\">65536</span>3</pre>\r\n<hr />\r\n<h2 id=\"解决办法\" style=\"font-weight:100;color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t2\"></a><strong>解决办法</strong> \r\n</h2>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	先解决第一条错误\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		<span>max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144]</span> \r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	<span>原因分析：</span> \r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	<a href=\"http://lib.csdn.net/base/operatingsystem\" class=\"replace_word\" target=\"_blank\">操作系统</a>的vm.max_map_count参数设置太小导致的\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	<span>解决办法：</span> \r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	这里我们可以直接修改<a href=\"http://lib.csdn.net/base/docker\" class=\"replace_word\" target=\"_blank\">Docker</a>本身的参数，当然也可以直接修改宿主机本身的配置文件，需要注意的是在docker 容器中执行\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		sysctl -w vm.max_map_count=655360\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	会提示错误：\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		sysctl: setting key “vm.max_map_count”: Read-only file system\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	这是因为Docker的base image做的很精简，甚至都没有init进程，原本在OS启动时执行生效系统变量的过程(sysctl -p)也给省略了，导致这些系统变量依旧保留着kernel默认值，这时候需要我们在容器启动时加入 –privileged 来获取修改系统参数的权限\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	这里我选择的是修改宿主机本身的配置文件，然后重新启动镜像，也能解决问题，退出容器，返回到宿主机&nbsp;<br />\r\n修改vm.max_map_count 可以通过命令行修改，但是在机器重启时会失效，所以通过修改配置文件来解决问题&nbsp;<br />\r\n命令行修改办法：\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		sudo sysctl -w vm.max_map_count=655360\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	并用以下命令查看是否修改成功\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		sysctl -a | grep “vm.max_map_count”\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	修改配置文件：\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		sudo vim /etc/sysctl.conf\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	加入：\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		vm.max_map_count=262144\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	保存即可\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	接下来解决\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		<span>max file descriptors [4096] for elasticsearch process likely too low, increase to at least [65536]</span> \r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	这个问题\r\n</p>\r\n<blockquote style=\"background-color:rgba(128, 128, 128, 0.0470588);color:#555555;font-family:&quot;font-size:14px;\">\r\n	<p>\r\n		sudo vim /etc/security/limits.conf\r\n	</p>\r\n</blockquote>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	加入以下两行：\r\n</p>\r\n<pre class=\"prettyprint\">redhat hard nofile <span class=\"hljs-number\" style=\"color:#006666;\">65536</span> redhat <span class=\"hljs-keyword\" style=\"color:#000088;\">soft</span> nofile <span class=\"hljs-number\" style=\"color:#006666;\">65536</span> redhat这里为用户名</pre>\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	然后重启启动elasticsearch即可\r\n</p>\r\n<hr />\r\n<p style=\"color:#555555;font-family:&quot;font-size:14px;background-color:#FFFFFF;\">\r\n	附一张kibana 5.0的图片&nbsp;<br />\r\n<img title=\"\" alt=\"这里写图片描述\" src=\"http://img.blog.csdn.net/20161028233835645\" style=\"height:auto;\" /> \r\n</p>',8);
/*!40000 ALTER TABLE `blog` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_cate`
--

DROP TABLE IF EXISTS `blog_cate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_cate` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cate_name` varchar(30) NOT NULL,
  `cate_addtime` datetime(6) NOT NULL,
  `cate_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `cate_id` (`cate_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_cate`
--

LOCK TABLES `blog_cate` WRITE;
/*!40000 ALTER TABLE `blog_cate` DISABLE KEYS */;
INSERT INTO `blog_cate` VALUES (1,'机器学习','2016-11-09 14:07:00.000000',1),(2,'Spark_Scala','2016-11-09 14:08:00.000000',2),(3,'hadoop家族','2016-11-09 14:08:00.000000',3),(4,'Django修炼之路','2016-11-09 14:08:00.000000',4),(5,'java','2016-11-09 14:08:00.000000',5),(6,'Linux','2016-11-09 14:09:00.000000',6),(7,'Docker容器技术','2016-11-09 14:09:00.000000',7),(8,'ELK日志分析','2016-11-09 14:09:00.000000',8),(9,'谈谈理想','2016-11-09 14:12:00.000000',9);
/*!40000 ALTER TABLE `blog_cate` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `djang_content_type_id_122d633a004bab33_fk_django_content_type_id` (`content_type_id`),
  KEY `django_admin_log_user_id_1f370c838d2c1291_fk_auth_user_id` (`user_id`),
  CONSTRAINT `djang_content_type_id_122d633a004bab33_fk_django_content_type_id` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_1f370c838d2c1291_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=96 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2016-11-08 14:12:43.047625','1','五千万',1,'[{\"added\": {}}]',11,1),(2,'2016-11-08 14:12:53.065633','1','大师傅大师傅似的121',1,'[{\"added\": {}}]',12,1),(3,'2016-11-08 14:13:20.557392','1','大师傅大师傅似的121',3,'',12,1),(4,'2016-11-08 14:13:35.323450','1','五千万',3,'',11,1),(5,'2016-11-08 14:45:39.536628','1','问富翁',1,'[{\"added\": {}}]',7,1),(6,'2016-11-08 16:02:02.154269','3','fxgvfdsvdf',1,'[{\"added\": {}}]',13,1),(7,'2016-11-09 14:08:00.777934','1','机器学习',1,'[{\"added\": {}}]',11,1),(8,'2016-11-09 14:08:15.237454','2','Spark/Scala',1,'[{\"added\": {}}]',11,1),(9,'2016-11-09 14:08:25.851590','3','hadoop家族',1,'[{\"added\": {}}]',11,1),(10,'2016-11-09 14:08:43.099042','4','Django修炼之路',1,'[{\"added\": {}}]',11,1),(11,'2016-11-09 14:08:51.522744','5','java',1,'[{\"added\": {}}]',11,1),(12,'2016-11-09 14:08:59.701720','5','java',2,'[{\"changed\": {\"fields\": [\"cate_id\"]}}]',11,1),(13,'2016-11-09 14:09:22.485749','6','Linux',1,'[{\"added\": {}}]',11,1),(14,'2016-11-09 14:09:48.659569','7','Docker容器技术',1,'[{\"added\": {}}]',11,1),(15,'2016-11-09 14:09:58.093980','8','ELK日志分析',1,'[{\"added\": {}}]',11,1),(16,'2016-11-09 14:11:29.145914','1','《机器学习实战》Logistic回归算法（1）',1,'[{\"added\": {}}]',12,1),(17,'2016-11-09 14:12:38.832891','9','谈谈理想',1,'[{\"added\": {}}]',11,1),(18,'2016-11-09 14:13:00.384019','2','沈阳东网科技和福建卓智网络面试心得',1,'[{\"added\": {}}]',12,1),(19,'2016-11-09 14:16:14.541429','2','CSDN博客分类系统的分析与实现',1,'[{\"added\": {}}]',7,1),(20,'2016-11-09 14:16:23.232443','1','问富翁',3,'',7,1),(21,'2016-11-09 14:17:09.577908','1','Web开发',1,'[{\"added\": {}}]',8,1),(22,'2016-11-09 14:17:37.834154','2','日志分析项目',1,'[{\"added\": {}}]',8,1),(23,'2016-11-12 17:33:01.310271','3','数据采集',1,'[{\"added\": {}}]',8,1),(24,'2016-11-12 17:33:58.754217','4','Hadoop项目',1,'[{\"added\": {}}]',8,1),(25,'2016-11-12 17:34:36.324445','5','Spark实时处理',1,'[{\"added\": {}}]',8,1),(26,'2016-11-12 17:35:24.882883','6','NOSQL系列',1,'[{\"added\": {}}]',8,1),(27,'2016-11-12 17:36:01.076785','7','论文撰写',1,'[{\"added\": {}}]',8,1),(28,'2016-11-12 17:36:26.913481','8','图像处理制作',1,'[{\"added\": {}}]',8,1),(29,'2016-11-12 18:11:14.052451','7','论文撰写',2,'[{\"changed\": {\"fields\": [\"wcate_content\"]}}]',8,1),(30,'2016-11-12 18:12:30.908022','1','Web开发',2,'[]',8,1),(31,'2016-11-12 18:24:25.194539','1','Web开发',2,'[{\"changed\": {\"fields\": [\"wcate_content\"]}}]',8,1),(32,'2016-11-12 18:50:46.292135','1','Web开发',2,'[{\"changed\": {\"fields\": [\"wcate_people\"]}}]',8,1),(33,'2016-11-12 18:52:38.744192','1','Web开发',2,'[{\"changed\": {\"fields\": [\"wcate_people\"]}}]',8,1),(34,'2016-11-12 19:07:52.121254','8','图像处理制作',2,'[{\"changed\": {\"fields\": [\"wcate_people\", \"wcate_content\"]}}]',8,1),(35,'2016-11-12 19:07:58.232562','7','论文撰写',2,'[{\"changed\": {\"fields\": [\"wcate_people\", \"wcate_content\"]}}]',8,1),(36,'2016-11-12 19:08:03.623010','6','NOSQL系列',2,'[{\"changed\": {\"fields\": [\"wcate_people\", \"wcate_content\"]}}]',8,1),(37,'2016-11-12 19:08:09.986922','6','NOSQL系列',2,'[{\"changed\": {\"fields\": [\"wcate_people\", \"wcate_content\"]}}]',8,1),(38,'2016-11-12 19:08:16.075401','4','Hadoop项目',2,'[{\"changed\": {\"fields\": [\"wcate_people\", \"wcate_content\"]}}]',8,1),(39,'2016-11-12 19:10:20.447367','3','数据采集',2,'[{\"changed\": {\"fields\": [\"wcate_people\", \"wcate_content\"]}}]',8,1),(40,'2016-11-12 19:10:54.710233','2','日志分析项目',2,'[{\"changed\": {\"fields\": [\"wcate_people\", \"wcate_content\"]}}]',8,1),(41,'2016-11-12 19:11:22.374977','5','Spark实时处理',2,'[{\"changed\": {\"fields\": [\"wcate_people\", \"wcate_content\"]}}]',8,1),(42,'2016-11-12 19:13:29.616055','3','DDDDDDDDDDDDDDDD',2,'[{\"changed\": {\"fields\": [\"news_title\", \"news_id\", \"news_content\"]}}]',13,1),(43,'2016-11-12 19:15:19.094577','4','美媒看好湖人进季后赛 沃顿挖掘出湖人强大替补席',1,'[{\"added\": {}}]',13,1),(44,'2016-11-12 19:15:25.166915','3','DDDDDDDDDDDDDDDD',2,'[{\"changed\": {\"fields\": [\"news_content\"]}}]',13,1),(45,'2016-11-12 19:16:09.080343','5','粤媒：国足在安静中积蓄力量 里皮每天新花样',1,'[{\"added\": {}}]',13,1),(46,'2016-11-12 19:16:17.743520','3','DDDDDDDDDDDDDDDD',3,'',13,1),(47,'2016-11-12 19:16:41.991131','6','曝明年亚冠资格赛时间敲定 外援名额依然3+1',1,'[{\"added\": {}}]',13,1),(48,'2016-11-12 19:17:18.425914','7','曝本田圭佑冬窗遭米兰清洗 或零转会加盟上港',1,'[{\"added\": {}}]',13,1),(49,'2016-11-12 19:18:25.667254','8','中国已连续四年成为世界第一大出境旅游消费国',1,'[{\"added\": {}}]',13,1),(50,'2016-11-12 19:18:46.993023','9','八一飞行表演队女飞行员个人经历曝光(组图)',1,'[{\"added\": {}}]',13,1),(51,'2016-11-12 19:19:34.178157','10','广东政协原主席受贿1.4亿 为什么没被终身监禁',1,'[{\"added\": {}}]',13,1),(52,'2016-11-12 19:20:01.255137','11','\"天宫食谱”：一顿太空鱼香肉丝要炒几十公斤',1,'[{\"added\": {}}]',13,1),(53,'2016-11-12 19:20:26.982002','12','媒体称高校教师医务人员等群体收入将发生大变化',1,'[{\"added\": {}}]',13,1),(54,'2016-11-12 19:21:18.112284','13','“红通”第5号嫌犯闫永明从新西兰回国投案自首',1,'[{\"added\": {}}]',13,1),(55,'2016-11-12 19:21:38.584266','14','中国第4次“单身潮”来袭 更多女性选择主动单身',1,'[{\"added\": {}}]',13,1),(56,'2016-11-12 19:22:00.962827','15','南航客机在洛杉矶与拖车发生“剐蹭”事件',1,'[{\"added\": {}}]',13,1),(57,'2016-11-12 19:22:25.339902','16','韩国总统朴槿惠陷“整容风波” 失职传言四起',1,'[{\"added\": {}}]',13,1),(58,'2016-11-12 19:23:04.583001','17','南航空姐高空玩机震 2年与430名乘客厕所全裸做爱高潮嘿',1,'[{\"added\": {}}]',13,1),(59,'2016-11-12 19:23:40.571549','18','巴基斯坦一神庙发生爆炸 造成至少30死100伤',1,'[{\"added\": {}}]',13,1),(60,'2016-11-13 05:45:18.077208','19','霾黄色预警：河北河南山东局地有重度霾',1,'[{\"added\": {}}]',13,1),(61,'2016-11-13 06:59:43.180412','3','django models进行数据库增删查改',1,'[{\"added\": {}}]',12,1),(62,'2016-11-13 07:29:05.404496','4','django:自动化更新对象数据方法',1,'[{\"added\": {}}]',12,1),(63,'2016-11-13 07:29:58.798607','5','Search-guard在ELK Stack日志分析系统中',1,'[{\"added\": {}}]',12,1),(64,'2016-11-13 07:30:36.296372','6','Elasticsearch5.0 beta版本安装错误',1,'[{\"added\": {}}]',12,1),(65,'2016-11-13 07:53:38.759158','1','《机器学习实战》Logistic回归算法（1）',2,'[{\"changed\": {\"fields\": [\"blog_content\"]}}]',12,1),(66,'2016-11-13 07:59:33.608727','5','Search-guard在ELK Stack日志分析系统中',2,'[{\"changed\": {\"fields\": [\"blog_content\"]}}]',12,1),(67,'2016-11-13 08:15:52.320923','6','Elasticsearch5.0 beta版本安装错误',2,'[{\"changed\": {\"fields\": [\"blog_content\"]}}]',12,1),(68,'2016-11-13 08:17:28.016929','2','Spark_Scala',2,'[{\"changed\": {\"fields\": [\"cate_name\"]}}]',11,1),(69,'2016-11-13 08:50:34.347102','3','基于Spark和Hive进行的豆瓣电影数据分析',1,'[{\"added\": {}}]',7,1),(70,'2016-11-14 04:21:19.389375','1','百姓服务网数据采集',1,'[{\"added\": {}}]',9,1),(71,'2016-11-14 04:22:33.105578','2','基于豆瓣图书的推荐系统',1,'[{\"added\": {}}]',9,1),(72,'2016-11-14 11:33:01.189497','1','百姓服务网数据采集',2,'[{\"changed\": {\"fields\": [\"ex_content\"]}}]',9,1),(73,'2016-11-14 11:33:20.810363','1','百姓服务网数据采集',2,'[{\"changed\": {\"fields\": [\"ex_content\"]}}]',9,1),(74,'2016-11-14 11:33:29.698394','1','百姓服务网数据采集',2,'[{\"changed\": {\"fields\": [\"ex_content\"]}}]',9,1),(75,'2016-11-14 11:49:06.119252','1','百姓服务网数据采集',2,'[{\"changed\": {\"fields\": [\"ex_content\"]}}]',9,1),(76,'2016-11-14 12:21:27.529279','1','1923361654@qq.com',1,'[{\"added\": {}}]',10,1),(77,'2016-11-14 12:21:29.821719','1','1923361654@qq.com',2,'[]',10,1),(78,'2016-11-14 12:22:09.676233','2','thinkgamer@163.com',1,'[{\"added\": {}}]',10,1),(79,'2016-11-14 12:27:41.547046','3','1923361654@qq.com',1,'[{\"added\": {}}]',10,1),(80,'2016-11-14 12:51:03.623952','7','1923361654@qq.com',3,'',10,1),(81,'2016-11-14 12:51:03.700006','6','1923361654@qq.com',3,'',10,1),(82,'2016-11-14 12:51:03.793700','5','1923361654@qq.com',3,'',10,1),(83,'2016-11-14 12:51:03.846199','3','1923361654@qq.com',3,'',10,1),(84,'2016-11-14 12:51:03.877545','4','1923361654@qq.com',3,'',10,1),(85,'2016-11-14 12:52:23.003965','10','1923361654@qq.com',1,'[{\"added\": {}}]',10,1),(86,'2016-11-14 12:54:03.994654','9','1923361654@qq.com',3,'',10,1),(87,'2016-11-14 12:54:04.037623','10','1923361654@qq.com',3,'',10,1),(88,'2016-11-14 12:54:04.139788','8','1923361654@qq.com',3,'',10,1),(89,'2016-11-14 13:05:13.769141','11','1923361654@qq.com',3,'',10,1),(90,'2016-11-14 13:32:19.736577','13','1923361654@qq.com',2,'[{\"changed\": {\"fields\": [\"talk_tag\", \"talk_time\"]}}]',10,1),(91,'2016-11-14 13:33:40.279962','13','1923361654@qq.com',3,'',10,1),(92,'2016-12-05 14:33:57.032953','20','1111111111',1,'[{\"added\": {}}]',13,1),(93,'2016-12-05 14:34:16.008740','20','1111111111',3,'',13,1),(94,'2016-12-10 19:38:41.240417','1','后台管理员',1,'[{\"added\": {}}]',3,1),(95,'2016-12-10 19:39:22.956353','1','cyanscikit',2,'[{\"changed\": {\"fields\": [\"last_login\"]}}]',4,1);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_10cc8014c14c2e1d_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (1,'admin','logentry'),(3,'auth','group'),(2,'auth','permission'),(4,'auth','user'),(12,'blog','blog'),(11,'blog','cate'),(5,'contenttypes','contenttype'),(7,'item','item'),(9,'market','example'),(8,'market','wcate'),(13,'news','news'),(6,'sessions','session'),(10,'talking','talk');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2016-11-04 09:01:05.174719'),(2,'auth','0001_initial','2016-11-04 09:01:12.162647'),(3,'admin','0001_initial','2016-11-04 09:01:13.789774'),(4,'contenttypes','0002_remove_content_type_name','2016-11-04 09:01:15.108708'),(5,'auth','0002_alter_permission_name_max_length','2016-11-04 09:01:15.764176'),(6,'auth','0003_alter_user_email_max_length','2016-11-04 09:01:16.579758'),(7,'auth','0004_alter_user_username_opts','2016-11-04 09:01:16.625791'),(8,'auth','0005_alter_user_last_login_null','2016-11-04 09:01:17.180195'),(9,'auth','0006_require_contenttypes_0002','2016-11-04 09:01:17.248215'),(10,'blog','0001_initial','2016-11-04 09:01:19.678934'),(11,'item','0001_initial','2016-11-04 09:01:20.084239'),(12,'market','0001_initial','2016-11-04 09:01:23.189408'),(13,'news','0001_initial','2016-11-04 09:01:23.662754'),(14,'sessions','0001_initial','2016-11-04 09:01:24.177101'),(15,'talking','0001_initial','2016-11-04 09:01:24.472504'),(16,'admin','0002_logentry_remove_auto_add','2016-11-12 18:36:58.646245'),(17,'auth','0007_alter_validators_add_error_messages','2016-11-12 18:36:58.724353'),(18,'auth','0008_alter_user_username_max_length','2016-11-12 18:37:00.143440'),(19,'blog','0002_auto_20161113_0236','2016-11-12 18:37:00.237200'),(20,'market','0002_wcate_wcate_people','2016-11-12 18:37:01.221557');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_de54fa62` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('6fgorbmg3vxyrfkxr48yhgytcimsd4dm','NDZlYjM5YzA2NmYyMTIyNjBmZmYxNzQ5YzFlYzU4N2RmMzY1MWZjZjp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiMzZjODVlOWIyZjliNThmOWMxMDBhZjVkN2ZhYmYwYWEzMjAwNjIzOSIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2016-11-21 16:34:48.007174'),('dhwt82h96qz451c84vnotsxepbef25am','MzJlNTc5YjhlNmFiYThhY2NhODE0OWQzOTY5MzAxZjhjMzZhYTBmMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3MDdhNDBlMDhjZTIwZTdlNmEzMDg3MjJlMWEzMDhlM2RlMDZmNDc5In0=','2017-05-18 15:40:31.099685'),('t6ast165yof13wbc6xdarexofnsgp55r','OWVhZjEyM2NiZGRjMGZkNjJiZGQ0OGI1YTQxY2FlNGMwODFmMzVjYzp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6IjEiLCJfYXV0aF91c2VyX2hhc2giOiI3MDdhNDBlMDhjZTIwZTdlNmEzMDg3MjJlMWEzMDhlM2RlMDZmNDc5In0=','2016-11-23 14:07:30.710647'),('u3poueku11flnq5dxxc93lqafion6raa','MTMzMzYwOWNlNmI1ZmM0ZDRkODQ1NzQxZGFmNTNlYjhjMThjNGRjMTp7Il9hdXRoX3VzZXJfaGFzaCI6IjcwN2E0MGUwOGNlMjBlN2U2YTMwODcyMmUxYTMwOGUzZGUwNmY0NzkiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2016-11-26 17:31:07.810335'),('wnms2kqrfbhfog4mrsopbgy82pumlgpv','M2YxZjllN2VmZmQwMGQzNTI5MzlhNjU3NWJlYmEyNGNlMjg2ZDkzODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9oYXNoIjoiNzA3YTQwZTA4Y2UyMGU3ZTZhMzA4NzIyZTFhMzA4ZTNkZTA2ZjQ3OSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2016-12-19 13:50:14.537298'),('xafxq05kj9h0b7fi7h069c3ts4ntlbps','NDZlYjM5YzA2NmYyMTIyNjBmZmYxNzQ5YzFlYzU4N2RmMzY1MWZjZjp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiMzZjODVlOWIyZjliNThmOWMxMDBhZjVkN2ZhYmYwYWEzMjAwNjIzOSIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2016-11-21 16:34:17.078118');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `example`
--

DROP TABLE IF EXISTS `example`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `example` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ex_title` varchar(30) NOT NULL,
  `ex_id` varchar(64) NOT NULL,
  `ex_seenum` int(11) NOT NULL,
  `ex_money` int(11) NOT NULL,
  `ex_gree` double NOT NULL,
  `ex_time` datetime(6) NOT NULL,
  `ex_content` longtext NOT NULL,
  `ex_category_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `ex_id` (`ex_id`),
  KEY `example_8a15ad54` (`ex_category_id`),
  CONSTRAINT `example_ex_category_id_2d1fc576e8805548_fk_waibao_cate_id` FOREIGN KEY (`ex_category_id`) REFERENCES `waibao_cate` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `example`
--

LOCK TABLES `example` WRITE;
/*!40000 ALTER TABLE `example` DISABLE KEYS */;
INSERT INTO `example` VALUES (1,'百姓服务网数据采集','1000',4,1000,100,'2016-11-14 04:20:00.000000','<span>1：数据来源百姓服务网 2：爬取全部省份的数据3：的说法是对方的方式速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发<span>1：数据来源百姓服务网 2：爬取全部省份的数据3：的说法是对方的方式速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发</span><span>1：数据来源百姓服务网 2：爬取全部省份的数据3：的说法是对方的方式速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发<span>1：数据来源百姓服务网 2：爬取全部省份的数据3：的说法是对方的方式速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发</span><span>1：数据来源百姓服务网 2：爬取全部省份的数据3：的说法是对方的方式速度发发发发发发发发发发发发发发发发发发发发发发发发发发发</span></span></span>',3),(2,'基于豆瓣图书的推荐系统','1001',4,1700,1000,'2016-11-14 04:22:00.000000','数据来源为豆瓣图书，采用的是基于user和基于item的推荐算法进行图书推荐',1);
/*!40000 ALTER TABLE `example` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `item`
--

DROP TABLE IF EXISTS `item`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `item` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `item_title` varchar(30) NOT NULL,
  `item_id` varchar(64) NOT NULL,
  `item_seenum` int(11) NOT NULL,
  `item_time` datetime(6) NOT NULL,
  `item_content` longtext NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `item_id` (`item_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `item`
--

LOCK TABLES `item` WRITE;
/*!40000 ALTER TABLE `item` DISABLE KEYS */;
INSERT INTO `item` VALUES (2,'CSDN博客分类系统的分析与实现','123412',4,'2016-11-09 14:14:00.000000','<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	一：爬虫爬取csdn博客各个系列的博文和标签\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在这里只给出主要代码：\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n<pre class=\"prettyprint lang-py\">#coding:utf-8\r\n\r\n#第一部分：得到首页博客专家各个系列链接\r\n#===============================================================================\r\n\r\nimport urllib2\r\nfrom bs4 import BeautifulSoup\r\nimport os\r\n\r\n\r\ndef getPage(href): #伪装成浏览器登陆,获取网页源代码\r\n    headers = {  \r\n        \'User-Agent\':\'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6\'  \r\n    }  \r\n    req = urllib2.Request(  \r\n        url = href ,\r\n        headers = headers  \r\n    )  \r\n    \r\n    #content = urllib2.urlopen(req).read()\r\n    if urllib2.urlopen(req).read():\r\n        return urllib2.urlopen(req).read()\r\n\r\ndef getText(href,count):   #得到博客内容和博主的相关信息\r\n    soup = BeautifulSoup(getPage(href))\r\n    div = soup.find(\"div\",id=\"article_details\",class_=\"details\")\r\n    #print div\r\n    \r\n#写博文标签---------------------------------------\r\n    tag = div.find(\"div\",class_=\"tag2box\")             #文章标签\r\n    if tag:\r\n        for a in tag.findAll(\"a\"): \r\n            #print a.get_text()                          #标签\r\n            aTag = a.get_text()\r\n            fp = open(\"%s\\\\tag.txt\" % count,\"a\")\r\n            fp.write(aTag.encode(\'utf-8\'))\r\n            fp.write(\"\\n\")\r\n            fp.close()\r\n#写博文标题和内容-----------------------------------------------------   \r\n    title = div.find(\"div\",class_=\"article_title\")  #文章标题\r\n    content = div.find(\"div\",id=\"article_content\",class_=\"article_content\") #内容\r\n    titleName = title.h1.span.a.get_text().strip()       #标题\r\n    #print titleName\r\n    cont = content.get_text()   \r\n    #print cont                       #内容\r\n    fp = open(\"%s\\\\content.txt\" % count,\"a\")\r\n    fp.write(titleName.encode(\'utf-8\'))\r\n    fp.write(cont.encode(\'utf-8\'))\r\n    fp.close()\r\n#写博主的访问量排名等--------------------------------------------------\r\n    div = soup.find(\"div\",id=\"panel_Profile\",class_=\"panel\")\r\n    if div:\r\n        ul_1 = div.find(\"ul\",id = \"blog_rank\")\r\n        \r\n        fp = open(\"%s\\\\aother.txt\" % count,\"a\")\r\n        ul_1_List = ul_1.findAll(\"li\")\r\n        visit = ul_1_List[0].get_text()\r\n        fp.write(visit.encode(\"utf-8\"))\r\n        fp.write(\"\\n\")\r\n        #print ul_1_List[0].get_text()                 #访问量\r\n\r\n        score = ul_1_List[0].get_text()\r\n        fp.write(score.encode(\"utf-8\"))\r\n        fp.write(\"\\n\")\r\n        #print ul_1_List[0].get_text()                   #积分\r\n\r\n        num = ul_1_List[3].get_text()\r\n        fp.write(num.encode(\"utf-8\"))\r\n        fp.write(\"\\n\")\r\n        #print ul_1_List[3].get_text()                 #排名\r\n  \r\n        ul_2 = div.find(\"ul\",id = \"blog_statistics\")\r\n        ul_2_List = ul_2.findAll(\"li\")\r\n        \r\n        #print ul_2_List[0].get_text()        #原创文章数\r\n        ower = ul_2_List[0].get_text()\r\n        fp.write(ower.encode(\"utf-8\"))\r\n        fp.write(\"\\n\")\r\n        \r\n        #print ul_2_List[1].get_text()           #转载文章数 \r\n        fromAnother = ul_2_List[2].get_text()\r\n        fp.write(fromAnother.encode(\"utf-8\"))\r\n        fp.write(\"\\n\")\r\n        \r\n        #print ul_2_List[2].get_text()             #译文文章数\r\n        translator = ul_2_List[2].get_text()\r\n        fp.write(translator.encode(\"utf-8\"))\r\n        fp.write(\"\\n\")\r\n        \r\n        #print ul_2_List[3].get_text()             #评论条数\r\n        talk = ul_2_List[3].get_text()\r\n        fp.write(talk.encode(\"utf-8\"))\r\n        fp.write(\"\\n\\n\")\r\n        fp.close()\r\n#------------------------------------------------------------------------\r\n\r\n\r\nif __name__==\"__main__\":\r\n    for count in range(10,11):\r\n        fp = open(\"%s.txt\" % count,\"r\")\r\n        hrefList = fp.readlines()\r\n        for href in hrefList:\r\n            print href.strip()\r\n            getText(href.strip(),count)\r\n        print count , \"is  Ok ===========================================\"</pre>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n		二：对其进行词频统计，找出频率最高的N个词，写入文件（主要是为第三步分类提供训练的数据集PS：小编的训练集不是太准确，各路大神若有好的意见可以给指导指导）\r\n	</p>\r\n	<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在这里简化为使用MapReduce程序统计tag\r\n	</p>\r\n	<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n		三：使用贝叶斯分类算法进行分类\r\n	</p>\r\n	<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; &nbsp; 贝叶斯算法原理请参考：<a target=\"_blank\" href=\"http://blog.csdn.net/gamer_gyt/article/details/47205371\">http://blog.csdn.net/gamer_gyt/article/details/47205371</a>\r\n	</p>\r\n	<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Python代码实现请参考：<a target=\"_blank\" href=\"http://blog.csdn.net/gamer_gyt/article/details/47860945\">http://blog.csdn.net/gamer_gyt/article/details/47860945</a>\r\n	</p>\r\n	<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; &nbsp; 分类代码实现如下：&nbsp; &nbsp; &nbsp;&nbsp;\r\n	</p>\r\n<pre class=\"prettyprint lang-py\">#encoding:utf-8\r\n\r\nfrom numpy import *\r\n\r\n\r\n#构造文档列表和标签列表\r\ndef loadDataSet():\r\n    wordList = []\r\n    typeList = [0,1,2,3,4,5,6,7,8,9]#0~9代表10种类型\r\n    for i in range(1,11):\r\n        lineList2 = []\r\n        fp = open(\"tagDispose\\%s.txt\" % i,\"r\")\r\n        lineList1 = fp.readlines()\r\n        for j in range(len(lineList1)):\r\n            strWord = lineList1[j].strip()\r\n            if ord(strWord[0])&lt;127:\r\n                strWord= strWord.lower()\r\n            lineList2.append(strWord)\r\n        wordList.append(lineList2)\r\n        fp.close()\r\n    return wordList,typeList\r\n\r\n#求所有文档的并集\r\ndef createBingjiList(wordList):\r\n    bingjiList = set([])        #调用set方法创建一个空集\r\n    for doc in wordList:\r\n        bingjiList = bingjiList | set(doc)   #创建两个集合并集\r\n    return list(bingjiList)\r\n\r\n#如果一个文档在该词库中，那么出现该单词的位置由0变成1\r\ndef setOfWords(bingjiList,inputList):\r\n    returnList = [0] * len(bingjiList)          #创建以一个所有元素都为0的向量\r\n    for word in inputList:\r\n        if word in bingjiList:\r\n            returnList[bingjiList.index(word)] =1\r\n    return returnList\r\n\r\n\'\'\'\r\ndef writeList(wordList,bingjiList):\r\n    fp1 = open(\"word.txt\",\"a\")\r\n    for i in range(len(wordList)):\r\n        fp1.write(str(wordList[i]))\r\n        fp1.write(\"\\n\")\r\n    fp1.close()\r\n        \r\n    fp2 = open(\"bingji.txt\",\"a\")\r\n    for i in range(len(bingjiList)):\r\n        fp2.write(str(bingjiList[i]))\r\n        fp2.write(\"\\n\")\r\n    fp2.close()\r\n\'\'\'\r\n#朴素贝叶斯分类器训练集\r\ndef trainBayes(trainMatrix,trainTag):\r\n    pA = []      #任意文档属于0-9类别的概率\r\n    for i in range(0,10):\r\n        pA.append(trainTag.count(i)/float(len(trainTag)))\r\n    numTrainDocs= len(trainMatrix)    #文档矩阵的长度\r\n    numWords = len(trainMatrix[0])     #文档矩阵第一行的单词个数\r\n    #初始化每个标签对应的矩阵，总数，避免某一个概率为0最后乘积为0，so初始化分子为1分母为2\r\n    p0Num = ones(numWords);p0Denom = 2.0\r\n    p1Num = ones(numWords);p1Denom = 2.0\r\n    p2Num = ones(numWords);p2Denom = 2.0\r\n    p3Num = ones(numWords);p3Denom = 2.0\r\n    p4Num = ones(numWords);p4Denom = 2.0\r\n    p5Num = ones(numWords);p5Denom = 2.0\r\n    p6Num = ones(numWords);p6Denom = 2.0\r\n    p7Num = ones(numWords);p7Denom = 2.0\r\n    p8Num = ones(numWords);p8Denom = 2.0\r\n    p9Num = ones(numWords);p9Denom = 2.0\r\n    for i in range(numTrainDocs):\r\n        if trainTag[i] == 0:\r\n            p0Num +=trainMatrix[i];p0Denom +=sum(trainMatrix[i])\r\n        elif trainTag[i] == 1:\r\n            p1Num +=trainMatrix[i];p1Denom +=sum(trainMatrix[i])\r\n        elif trainTag[i] == 2:\r\n             p2Num +=trainMatrix[i];p2Denom +=sum(trainMatrix[i])\r\n        elif trainTag[i] == 3:\r\n            p3Num +=trainMatrix[i];p3Denom +=sum(trainMatrix[i])\r\n        elif trainTag[i] == 4:\r\n            p4Num +=trainMatrix[i];p4Denom +=sum(trainMatrix[i])\r\n        elif trainTag[i] == 5:\r\n            p5Num +=trainMatrix[i];p5Denom +=sum(trainMatrix[i])\r\n        elif trainTag[i] == 6:\r\n            p6Num +=trainMatrix[i];p6Denom +=sum(trainMatrix[i])\r\n        elif trainTag[i] == 7:\r\n            p7Num +=trainMatrix[i];p7Denom +=sum(trainMatrix[i])\r\n        elif trainTag[i] == 8:\r\n            p8Num +=trainMatrix[i];p8Denom +=sum(trainMatrix[i])\r\n        else:\r\n            p9Num +=trainMatrix[i];p9Denom +=sum(trainMatrix[i])\r\n    pV = []\r\n    pV0 = log(p0Num/p0Denom);pV.append(pV0)  \r\n    pV1 = log(p1Num/p1Denom);pV.append(pV1)\r\n    pV2 = log(p2Num/p2Denom);pV.append(pV2)\r\n    pV3 = log(p3Num/p3Denom);pV.append(pV3)\r\n    pV4 = log(p4Num/p4Denom);pV.append(pV4)\r\n    pV5 = log(p5Num/p5Denom);pV.append(pV5)\r\n    pV6 = log(p6Num/p6Denom);pV.append(pV6)\r\n    pV7 = log(p7Num/p7Denom);pV.append(pV7)\r\n    pV8 = log(p8Num/p8Denom);pV.append(pV8)\r\n    pV9 = log(p9Num/p9Denom);pV.append(pV9)\r\n\r\n    return pA,pV\r\n\r\n#朴素贝叶斯分类函数\r\ndef classifyBayes(testDoc,pV,pA):\r\n    p0 = sum(testDoc * pV[0]) + log(pA[0])\r\n    p1 = sum(testDoc * pV[1]) + log(pA[1])\r\n    p2 = sum(testDoc * pV[2]) + log(pA[2])\r\n    p3 = sum(testDoc * pV[3]) + log(pA[3])\r\n    p4 = sum(testDoc * pV[4]) + log(pA[4])\r\n    p5 = sum(testDoc * pV[5]) + log(pA[5])\r\n    p6 = sum(testDoc * pV[6]) + log(pA[6])\r\n    p7 = sum(testDoc * pV[7]) + log(pA[7])\r\n    p8 = sum(testDoc * pV[8]) + log(pA[8])\r\n    p9 = sum(testDoc * pV[9]) + log(pA[9])\r\n    listValue = [p0,p1,p2,p3,p4,p5,p6,p7,p8,p9]\r\n    return listValue.index(max(listValue))\r\n\r\n#从文本中得到数据\r\ndef getDoc():\r\n    import jieba\r\n    print \"准备中......\\n请稍等......\"\r\n    fp = open(\"test.txt\",\'r\')\r\n    wordList = []\r\n    strDocList = fp.readlines()\r\n    for strDoc in strDocList:\r\n        full_seg = jieba.cut(strDoc.strip(),cut_all = True)\r\n        for word in full_seg:\r\n            if len(word)&gt;0:  #去除标点符号\r\n                if ord(word[0])&lt;127:\r\n                    wordList.append(word.lower())\r\n                else:\r\n                   wordList.append(word)\r\n    return wordList\r\n\r\ndef testingBayes():\r\n    wordList,typeList = loadDataSet()\r\n    bingjiList = createBingjiList(wordList)\r\n    trainMat = []   #创建一个空的列表\r\n    for lineDoc in wordList:\r\n        trainMat.append(setOfWords(bingjiList,lineDoc))#使用词向量来填充trainMat列表\r\n    pA,pV = trainBayes(trainMat,typeList)\r\n    testDoc = getDoc()      #从文本中得到数据\r\n    thisList = array(setOfWords(bingjiList,testDoc))\r\n    return classifyBayes(thisList,pV,pA)\r\n\r\nif __name__==\"__main__\":\r\n    type = [\'移动开发\',\'Web前端\',\'架构设计\',\'编程语言\',\'互联网\',\\\r\n            \'数据库\',\'系统运维\',\'云计算\',\'研发管理\',\'综合\']\r\n    classifiedNum = testingBayes()\r\n    print \"the text is classified as:\",str(type[classifiedNum]).decode(\"utf-8\")</pre>\r\n</p>'),(3,'基于Spark和Hive进行的豆瓣电影数据分析','32423',21,'2016-11-13 08:50:00.000000','<h1 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;\"><span style=\"font-size:18px;\">写在前边的话：</span></span>\r\n</h1>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;算是自己做的一个小课题吧，自己搭建平台，自己爬取数据，自己进行数据清洗和分析，自己进行可视化展示，写这篇博客不为别的，只是记录下自己做这个课题的整个过程，大神们勿喷</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;环境说明：hadoop2.7集群，包含Hbase，<a href=\"http://lib.csdn.net/base/hive\" class=\"replace_word\" target=\"_blank\">Hive</a>，<a href=\"http://lib.csdn.net/base/spark\" class=\"replace_word\" target=\"_blank\">Spark</a>，Sqoop，Mahout组件</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;过 &nbsp; &nbsp; &nbsp; 程：平台部署-&gt;数据采集-&gt; 数据存储-&gt;数据ETL-&gt;数据分析-&gt;可视化</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;课题github地址：<a target=\"_blank\" href=\"https://github.com/Thinkgamer/Douban_Movies_Analysic\">https://github.com/Thinkgamer/Douban_Movies_Analysi</a>&nbsp; （主要是源代码部分）<br />\r\n</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<h1 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t1\"></a><span style=\"font-family:&quot;\"><span style=\"font-size:18px;\">1：平台部署</span></span>\r\n</h1>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp;看之前的博客：<a target=\"_blank\" href=\"http://blog.csdn.net/gamer_gyt/article/details/51991893\">点击阅读</a><br />\r\n</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<h1 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t2\"></a><span style=\"font-family:&quot;\"><span style=\"font-size:18px;\">2：数据采集</span></span>\r\n</h1>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; 数据来源，<a target=\"_blank\" href=\"https://movie.douban.com/tag/\">豆瓣电影</a>，以Tag采集入口，对应标签采集对应的电影，使用Python3.4.3 + BeautifulSoup4.4.1 + urllib进行数据</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">的采集，本地存储形式为csv格式，代码结构为</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\"></span>\r\n</p>\r\n<div class=\"dp-highlighter bg_html\" style=\"font-family:Consolas, &quot;background-color:#E7E5DC;color:#555555;margin:18px 0px !important;\">\r\n	<div class=\"bar\">\r\n		<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n			<b>[html]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"CopyToClipboard\">copy</a>\r\n			<div>\r\n			</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span>\r\n		</div>\r\n	</div>\r\n	<ol class=\"dp-xml\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">-DouBan-Spider&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#项目根目录&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">----download&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#下载网页源代码模块&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">--------__init__.py&nbsp;&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">-------down_html.py&nbsp;&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">----fileoutput&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#文件输出保存路径&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">----output&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#将抓取的内容写入文件&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">--------__init__.py&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">--------output_all.py&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">----parase&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#解析网页代码&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">--------__init__.py&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">--------parase_html.py&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">----urlmanager&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#链接管理&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">--------__init__.py&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">--------manage_url.py&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">----main&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;数据保存格式（csv文件）</span>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;category.csv，两列（标签name，对应的电影数目）</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20160808092453966?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /></span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;movie.csv，10列(电影ID，名字，导演，编剧，类型，主演，上映时间，时长，评论人数，豆瓣评分)</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20160808095437652?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /></span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;movie_summary.txt，两列（电影ID，剧情摘要）</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20160808095450256?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /></span>\r\n</p>\r\n<h1 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t3\"></a><span style=\"font-family:&quot;\"><span style=\"font-size:18px;\">3：数据存储</span></span>\r\n</h1>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; 首先爬取的数据是存储在本地电脑上的，我们将其上传至HDFS，作为原始数据存储</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; 上传至HDFS：</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\"></span>\r\n</p>\r\n<div class=\"dp-highlighter bg_html\" style=\"font-family:Consolas, &quot;background-color:#E7E5DC;color:#555555;margin:18px 0px !important;\">\r\n	<div class=\"bar\">\r\n		<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n			<b>[html]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"CopyToClipboard\">copy</a>\r\n			<div>\r\n			</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span>\r\n		</div>\r\n	</div>\r\n	<ol class=\"dp-xml\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">bin/hdfs&nbsp;dfs&nbsp;-put&nbsp;/home/master/桌面/*.csv&nbsp;/file/douban_movie_data&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">bin/hdfs&nbsp;dfs&nbsp;-put&nbsp;/home/master/桌面/*.txt&nbsp;/file/douabn_movie_data&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">&nbsp; &nbsp; &nbsp; &nbsp;web查看显示为：</span>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\"><img src=\"http://img.blog.csdn.net/20160809103809242?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" width=\"960\" /><br />\r\n</span>\r\n</p>\r\n<h1 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t4\"></a><span style=\"font-family:&quot;\"><span style=\"font-size:18px;\">4：数据ETL</span></span>\r\n</h1>\r\n<h2 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t5\"></a><span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp;1) category.csv直接可放入hive中，创建category表，并加载数据</span>\r\n</h2>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"background-color:#FF6666;\">PS：这里要注意的是，这样不做任何处理直接加载到hive表中，在进行终端查询时会出现乱码情况</span></span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;background-color:#FF6666;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;解决办法：将本地文件另存为UTF-8格式，然后再进行导入到Hive中</span>\r\n</p>\r\n<div class=\"dp-highlighter bg_html\" style=\"font-family:Consolas, &quot;background-color:#E7E5DC;color:#555555;margin:18px 0px !important;\">\r\n	<div class=\"bar\">\r\n		<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n			<b>[html]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"CopyToClipboard\">copy</a>\r\n			<div>\r\n			</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span>\r\n		</div>\r\n	</div>\r\n	<ol class=\"dp-xml\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">#创建category数据表&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">create&nbsp;table&nbsp;movie_category(&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;cate_name&nbsp;string,&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;cate_count&nbsp;int&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">)&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">comment&nbsp;\"this&nbsp;table&nbsp;about&nbsp;movie&nbsp;category\"&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">row&nbsp;format&nbsp;delimited&nbsp;fields&nbsp;terminated&nbsp;by&nbsp;\",\";&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">#将category.csv加载到表中&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">load&nbsp;data&nbsp;inpath&nbsp;\'/file/douabn_movie_data/category.csv\'&nbsp;into&nbsp;table&nbsp;movie_category;&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<h2 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t6\"></a><span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; 2) 对movie_links.csv 进行预处理，提取出id，进行hive的两列式存储</span>\r\n</h2>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; 预处理</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\"></span>\r\n</p>\r\n<div class=\"dp-highlighter bg_html\" style=\"font-family:Consolas, &quot;background-color:#E7E5DC;color:#555555;margin:18px 0px !important;\">\r\n	<div class=\"bar\">\r\n		<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n			<b>[html]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"CopyToClipboard\">copy</a>\r\n			<div>\r\n			</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span>\r\n		</div>\r\n	</div>\r\n	<ol class=\"dp-xml\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">#-*-codinf:utf-8-*-&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\"><span class=\"attribute\" style=\"color:red;background-color:inherit;\">fp_w</span><span style=\"background-color:inherit;\">&nbsp;=&nbsp;</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">open</span><span style=\"background-color:inherit;\">(\"new_movies_links.csv\",\"a\")&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">with&nbsp;open(\"movies_links.csv\"&nbsp;,\"r\")&nbsp;as&nbsp;fp:&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"attribute\" style=\"color:red;background-color:inherit;\">links</span><span style=\"background-color:inherit;\">&nbsp;=&nbsp;</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">fp</span><span style=\"background-color:inherit;\">.readlines()&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;link&nbsp;in&nbsp;links:&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"attribute\" style=\"color:red;background-color:inherit;\">id</span><span style=\"background-color:inherit;\">&nbsp;=&nbsp;</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">link</span><span style=\"background-color:inherit;\">.strip().split(\"/\")[-2]&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"attribute\" style=\"color:red;background-color:inherit;\">href</span><span style=\"background-color:inherit;\">&nbsp;=&nbsp;</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">link</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp_w.write(id+\",\"&nbsp;+href)&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">fp_w.close()&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">print&nbsp;\"ETL&nbsp;OK\"&nbsp;&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">&nbsp; &nbsp; &nbsp;创建表movie_links，并载入数据</span>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\"></span>\r\n</p>\r\n<div class=\"dp-highlighter bg_html\" style=\"font-family:Consolas, &quot;background-color:#E7E5DC;color:#555555;margin:18px 0px !important;\">\r\n	<div class=\"bar\">\r\n		<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n			<b>[html]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"CopyToClipboard\">copy</a>\r\n			<div>\r\n			</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span>\r\n		</div>\r\n	</div>\r\n	<ol class=\"dp-xml\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">#创建表movie_links&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">create&nbsp;table&nbsp;movie_links(&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">id&nbsp;int,&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">href&nbsp;string&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">)&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">comment&nbsp;\"this&nbsp;table&nbsp;about&nbsp;every&nbsp;movie&nbsp;links\"&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">row&nbsp;format&nbsp;delimited&nbsp;fields&nbsp;terminated&nbsp;by&nbsp;\",\";&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">#从本地加载数据&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">load&nbsp;data&nbsp;local&nbsp;inpath&nbsp;\"/home/master/mycode/new_movies_links.csv\"&nbsp;into&nbsp;table&nbsp;movie_links;&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<h2 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t7\"></a>&nbsp; &nbsp; &nbsp; 3) 对movie.csv进行预处理，并存入hive\r\n</h2>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 预处理\r\n</p>\r\n<div class=\"dp-highlighter bg_html\" style=\"font-family:Consolas, &quot;background-color:#E7E5DC;color:#555555;margin:18px 0px !important;\">\r\n	<div class=\"bar\">\r\n		<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n			<b>[html]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"CopyToClipboard\">copy</a>\r\n			<div>\r\n			</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span>\r\n		</div>\r\n	</div>\r\n	<ol class=\"dp-xml\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">#&nbsp;-*-coding:utf-8-*-&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">#<span class=\"attribute\" style=\"color:red;background-color:inherit;\">encoding</span><span style=\"background-color:inherit;\">=</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">\"utf-8\"</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;保证导入hive之后查询时不会出现中文乱码&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\"><span class=\"attribute\" style=\"color:red;background-color:inherit;\">fp_w</span><span style=\"background-color:inherit;\">&nbsp;=&nbsp;</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">open</span><span style=\"background-color:inherit;\">(\"new_movies_load.csv\",\"a\",</span><span class=\"attribute\" style=\"color:red;background-color:inherit;\">encoding</span><span style=\"background-color:inherit;\">=</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">\"utf-8\"</span><span style=\"background-color:inherit;\">)&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">with&nbsp;open(\"movie.csv\",\"r\")&nbsp;as&nbsp;fp_r:&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;line&nbsp;in&nbsp;fp_r.readlines():&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"attribute\" style=\"color:red;background-color:inherit;\">movies</span><span style=\"background-color:inherit;\">=</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">line</span><span style=\"background-color:inherit;\">.strip().split(\",\")&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"attribute\" style=\"color:red;background-color:inherit;\">s</span><span style=\"background-color:inherit;\">&nbsp;=&nbsp;</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">\"\"</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#对上映时间进行处理&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"attribute\" style=\"color:red;background-color:inherit;\">year</span><span style=\"background-color:inherit;\">&nbsp;=&nbsp;</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">int</span><span style=\"background-color:inherit;\">(movies[6].replace(\"/\",\"-\").split(\"-\")[0])&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except:&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"attribute\" style=\"color:red;background-color:inherit;\">yesr</span><span style=\"background-color:inherit;\">&nbsp;=&nbsp;</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">\"\"</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"attribute\" style=\"color:red;background-color:inherit;\">month</span><span style=\"background-color:inherit;\">&nbsp;=&nbsp;</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">int</span><span style=\"background-color:inherit;\">(movies[6].replace(\"/\",\"-\").split(\"-\")[1])&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except:&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"attribute\" style=\"color:red;background-color:inherit;\">month</span><span style=\"background-color:inherit;\">&nbsp;=&nbsp;</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">\"\"</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movies[6]&nbsp;=&nbsp;str(year)&nbsp;+&nbsp;\",\"&nbsp;+&nbsp;str(month)&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;m&nbsp;in&nbsp;movies:&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;+=&nbsp;m+\",\"&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fp_w.write(s[:-1]+\"\\n\")&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;print(\"OK&nbsp;!!!\")&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;fp_w.close()&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">&nbsp; &nbsp; &nbsp; &nbsp; 创建movie_message表，并加载数据</span>\r\n<div class=\"dp-highlighter bg_html\" style=\"font-family:Consolas, &quot;background-color:#E7E5DC;color:#555555;margin:18px 0px !important;\">\r\n	<div class=\"bar\">\r\n		<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n			<b>[html]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"CopyToClipboard\">copy</a>\r\n			<div>\r\n			</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span>\r\n		</div>\r\n	</div>\r\n	<ol class=\"dp-xml\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">#创建存储表&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">create&nbsp;table&nbsp;movie_message(&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;id&nbsp;int,&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;title&nbsp;string,&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;daoyan&nbsp;array<span class=\"tag\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">&lt;</span><span class=\"tag-name\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">string</span><span class=\"tag\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">&gt;</span><span style=\"background-color:inherit;\">,&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;bianju&nbsp;array<span class=\"tag\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">&lt;</span><span class=\"tag-name\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">string</span><span class=\"tag\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">&gt;</span><span style=\"background-color:inherit;\">,&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;leixing&nbsp;array<span class=\"tag\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">&lt;</span><span class=\"tag-name\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">string</span><span class=\"tag\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">&gt;</span><span style=\"background-color:inherit;\">,&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;zhuyan&nbsp;array<span class=\"tag\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">&lt;</span><span class=\"tag-name\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">string</span><span class=\"tag\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">&gt;</span><span style=\"background-color:inherit;\">,&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;year&nbsp;int,&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;month&nbsp;int,&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;shichang&nbsp;int,&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;disnum&nbsp;int,&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;score&nbsp;float&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">)&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">comment&nbsp;\"this&nbsp;table&nbsp;about&nbsp;movie\'s&nbsp;message\"&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">row&nbsp;format&nbsp;delimited&nbsp;fields&nbsp;terminated&nbsp;by&nbsp;\",\"&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">collection&nbsp;items&nbsp;terminated&nbsp;by&nbsp;\'/\';&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">#加载数据&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">load&nbsp;data&nbsp;local&nbsp;inpath&nbsp;\"/home/master/mycode/new_movies_load.csv\"&nbsp;into&nbsp;table&nbsp;movie_message;&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<h2 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t8\"></a>&nbsp; &nbsp; &nbsp; 4) 创建movie_summary表，并加载数据\r\n</h2>\r\n<div class=\"dp-highlighter bg_html\" style=\"font-family:Consolas, &quot;background-color:#E7E5DC;color:#555555;margin:18px 0px !important;\">\r\n	<div class=\"bar\">\r\n		<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n			<b>[html]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"CopyToClipboard\">copy</a>\r\n			<div>\r\n			</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span>\r\n		</div>\r\n	</div>\r\n	<ol class=\"dp-xml\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">#加载数据&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">load&nbsp;data&nbsp;local&nbsp;inpath&nbsp;\"/home/master/mycode/new_movies_load.csv\"&nbsp;into&nbsp;table&nbsp;movie_message;&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">#创建剧情摘要表&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">create&nbsp;table&nbsp;movie_summary(&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">id&nbsp;int,&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">summary&nbsp;string&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">)&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">comment&nbsp;\"this&nbsp;table&nbsp;about&nbsp;movie&nbsp;summary\"&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">row&nbsp;format&nbsp;delimited&nbsp;fields&nbsp;terminated&nbsp;by&nbsp;\"\\t\";&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">#加载数据&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">load&nbsp;data&nbsp;local&nbsp;inpath&nbsp;\"/home/master/mycode/movie_summary.txt\"&nbsp;into&nbsp;table&nbsp;movie_summary;<span class=\"tag\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">&lt;</span><span class=\"tag-name\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">span</span><span style=\"background-color:inherit;\">&nbsp;</span><span class=\"attribute\" style=\"color:red;background-color:inherit;\">style</span><span style=\"background-color:inherit;\">=</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">\"font-family:&nbsp;Arial,&nbsp;Helvetica,&nbsp;sans-serif;&nbsp;background-color:&nbsp;rgb(255,&nbsp;255,&nbsp;255);\"</span><span class=\"tag\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">&gt;</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"tag\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">&lt;/</span><span class=\"tag-name\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">span</span><span class=\"tag\" style=\"color:#993300;background-color:inherit;font-weight:bold;\">&gt;</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<h2 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t9\"></a>&nbsp; &nbsp; &nbsp; &nbsp;5) 影评数据存入表中（以大鱼海棠为例，下边也将以大鱼海棠作为分析入口）\r\n</h2>\r\n<div style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<h1 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t10\"></a><span style=\"font-family:&quot;\"><span style=\"font-size:18px;\">5：数据分析</span></span>\r\n</h1>\r\n<h2 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t11\"></a><span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; 1)：电影类别统计</span>\r\n</h2>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 根据标签和对应的电影数目，进行Top10显示，如下：</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20160809085335658?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /><br />\r\n</span>\r\n</p>\r\n<h2 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t12\"></a><span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; 2)：电影剧情统计</span>\r\n</h2>\r\n<div style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\"><br />\r\n</span>\r\n</div>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20160810115659036?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" width=\"960\" alt=\"\" /><br />\r\n</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\"></span>\r\n</p>\r\n<h2 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t13\"></a><span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; 3)：厉</span><span style=\"font-family:&quot;font-size:14px;\">年影片数量走势图</span>\r\n</h2>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\"></span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp;<img src=\"http://img.blog.csdn.net/20160809195123998?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /></span>\r\n</p>\r\n<h2 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t14\"></a><span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; 4)：电影数目最多的十年</span>\r\n</h2>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp;&nbsp;<img src=\"http://img.blog.csdn.net/20160809195154108?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /></span>\r\n</p>\r\n<h2 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t15\"></a><span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; 5)：影评分析</span>\r\n</h2>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;首先将影评信息进行初步的ETL存入hive数据表，方便分析时直接导出需要的列即可，下面直接给出分析结果，代码和源文件参考github，链接在博客开头已给出。</span>\r\n</p>\r\n<h3 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t16\"></a><span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; (1)：影价等级比例</span>\r\n</h3>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20160823091614829?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /><br />\r\n</span>\r\n</p>\r\n<h3 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t17\"></a><span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; (2)：影评时间分析</span>\r\n</h3>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20160823091635220?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /><br />\r\n</span>\r\n</p>\r\n<h3 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t18\"></a><span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; (3)：影评高频词统计</span>\r\n</h3>\r\n<div style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; 使用spark进行中文分词统计请移步：<a target=\"_blank\" href=\"http://blog.csdn.net/gamer_gyt/article/details/52194773\">点击阅读</a>，jar包下载：<a target=\"_blank\" href=\"https://github.com/Thinkgamer/Hadoop-Spark-Learning/tree/master/Spark/ChineseWordSplitCount\">github</a></span>\r\n</div>\r\n<div style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20160823103319073?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /><br />\r\n</span>\r\n</div>\r\n<h3 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t19\"></a><span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; (4)：剧透类影评分析</span>\r\n</h3>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;内容为”这篇影评可能有剧透“在所有的影评中所占的比例</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;hive中执行：</span>\r\n</p>\r\n<div class=\"dp-highlighter bg_html\" style=\"font-family:Consolas, &quot;background-color:#E7E5DC;color:#555555;margin:18px 0px !important;\">\r\n	<div class=\"bar\">\r\n		<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n			<b>[html]</b>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"ViewSource\">view plain</a><span>&nbsp;<a href=\"http://blog.csdn.net/gamer_gyt/article/details/52142375#\" class=\"CopyToClipboard\">copy</a>\r\n			<div>\r\n			</div>\r\n</span><span>&nbsp;</span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a></span><span class=\"tracking-ad\"><a href=\"https://code.csdn.net/snippets/1846988/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a></span>\r\n		</div>\r\n	</div>\r\n	<ol class=\"dp-xml\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">select&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n			<span style=\"color:black;background-color:inherit;\">round(sum(case&nbsp;when&nbsp;<span class=\"attribute\" style=\"color:red;background-color:inherit;\">content</span><span style=\"background-color:inherit;\">=</span><span class=\"attribute-value\" style=\"color:blue;background-color:inherit;\">\"这篇影评可能有剧透\"</span><span style=\"background-color:inherit;\">&nbsp;then&nbsp;1&nbsp;else&nbsp;0&nbsp;end)/count(*),2)&nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"color:black;background-color:inherit;\">from&nbsp;yingping_dayu;&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><u>结果为：0.43</u>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;内容为”这篇影评可能有剧透“在每天中的数目变化</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img src=\"http://img.blog.csdn.net/20160823132030375?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /></span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我们可以将影评变化和剧透影评在一张图上显示如下：</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20160823133416720?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /></span>\r\n</p>\r\n<h3 style=\"color:#555555;font-family:&quot;background-color:#FFFFFF;\">\r\n	<a name=\"t20\"></a><span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; (5)：影评情感分类</span>\r\n</h3>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;这个部分主要是针对每个影评进行自动评级，豆瓣电影对影评的评级分为五个等级（\'很差\',\'较差\',\'还行\',\'推荐\',\'力荐\'），这里使用的是朴素贝叶斯分类<a href=\"http://lib.csdn.net/base/datastructure\" class=\"replace_word\" target=\"_blank\">算法</a>，首先对每个等级的影评进行分词，提取高频词作为分类的依据</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 第一步：针对影评的等级和影评内容分词并写入相应的文件</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 代码就不贴了（github上有），处理结果如下：</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20160823172955099?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /></span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0代表很差，依次类推，5代表力荐</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;第二步：结合朴素贝叶斯算法和以上的数据，进行学习分类</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;把需要分类的影评写入test.txt文件，然后运行程序，结果显示如图（红色部分为中文分词的过程，不必理会）：</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img src=\"http://img.blog.csdn.net/20160823173325197?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" /><br />\r\n</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 需要说明的是，这里分类的效果很差，原因是豆瓣影评分级的依据是自己提取的高频词，但是从某种程度上说，这是不靠谱的，如果大家有什么好的意见可以提一下，一起学习。</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:&quot;font-size:14px;\">附：分享一个针对豆瓣电影数据做的比较好看的可视化web展示： &nbsp;http://zhanghonglun.cn/data-visualization/</span>\r\n</p>\r\n<p style=\"color:#555555;font-family:&quot;font-size:15px;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style=\"font-family:&quot;font-size:14px;\">但是上边的链接所展示的不足之处为数据为静态的，即不能实时的从豆瓣获取数据，而且展示的数据维度比较单一</span>\r\n</p>');
/*!40000 ALTER TABLE `item` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `news`
--

DROP TABLE IF EXISTS `news`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `news` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `news_title` varchar(30) NOT NULL,
  `news_id` varchar(64) NOT NULL,
  `news_seenum` int(11) NOT NULL,
  `news_time` datetime(6) NOT NULL,
  `news_content` longtext NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `news_id` (`news_id`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `news`
--

LOCK TABLES `news` WRITE;
/*!40000 ALTER TABLE `news` DISABLE KEYS */;
INSERT INTO `news` VALUES (4,'美媒看好湖人进季后赛 沃顿挖掘出湖人强大替补席','32423',3,'2016-11-12 19:13:00.000000','<p style=\"font-size:14px;font-family:宋体;background-color:#FFFFFF;\">\r\n	搜狐体育独家稿件 严禁转载）北京时间11月12日，昨天洛杉矶湖人队101-91击败萨克拉门托国王队，目前战绩为5胜4负胜率超过50%。洛杉矶当地媒体认为湖人队强大的替补阵容能够帮助球队进入季后赛。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体;background-color:#FFFFFF;\">\r\n	　　上赛季湖人队只取得17胜，为历史最差战绩，本赛季开赛前湖人队被预测将再次联盟垫底。但是迄今为止，湖人队在揭幕战当中击落过休斯敦火箭队，客场生擒过亚特兰大老鹰队，还击败过坐拥四巨头的金州勇士队，昨天还曾逆转萨克拉门托国王队。这些胜利中，火箭队、老鹰队和勇士队都属于上赛季季后赛球队。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体;background-color:#FFFFFF;\">\r\n	　　目前看来湖人将能从上赛季17胜当中反弹，他们拥有年轻和具备天赋的阵容，球员们拥护沃顿，乔丹-克拉克森表示过愿意为沃顿赴汤蹈火。沃顿在湖人队当中建立起赢球文化，同时也享受尽可能多轮换球队阵容。NBA大部分球队是八人轮换，有时是九人，但在湖人队当中最多利用十人轮换，这非常奏效。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体;background-color:#FFFFFF;\">\r\n	　　湖人队首发是拉塞尔、尼克-杨、洛尔-邓、朱利斯-兰德尔和莫兹戈夫，替补阵容当中有克拉克森、路-威廉姆斯、英格拉姆、小南斯和布莱克。有九位球员场均登场时间超过20分钟，但是没有人超过30分钟，在超级球队当中核心球员一般上场时间要超过35分钟，这可以看出湖人队全民皆兵。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体;background-color:#FFFFFF;\">\r\n	　　在关键比赛当中，总有不同的湖人队球员挺身而出，拉塞尔展现出领袖精神，杨打出生涯最佳状态，兰德尔在攻防两端很具攻击力，莫兹戈夫表现超出预期，克拉克森找到个人位置，布莱克能在篮筐下战斗，威廉姆斯有关键大心脏，英格拉姆逐步融入NBA，小南斯展现出极佳比赛气质。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体;background-color:#FFFFFF;\">\r\n	　　湖人队目前场均得分107.9分为联盟第六位，令人印象更深刻的是他们板凳得分能力，场均有48.9分。湖人队在比赛当中能迅速的变阵，同时保持比赛的强度和活力。沃顿针对不同比赛做出不同针对方法，大部分时候湖人打小球战术，但是在对阵国王的比赛里，沃顿也有让莫兹戈夫一直留着在场上的情况。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体;background-color:#FFFFFF;\">\r\n	　　当球队当中拥有年轻天赋球员和老将的时候，沃顿总能挖掘出球队最大的潜力。按照上赛季进入季后赛的西部第八名火箭队的战绩来看（41胜41负胜率50%），如果湖人队延续这种状态，有望进入季后赛。\r\n</p>'),(5,'粤媒：国足在安静中积蓄力量 里皮每天新花样','3251112',0,'2016-11-12 19:16:00.000000','<h1 style=\"font-size:26px;font-weight:normal;font-family:微软雅黑, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<h1 style=\"font-size:26px;font-weight:normal;font-family:微软雅黑, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		<p style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n			离国足集训地海埂基地不远的地方就是滇池湖畔,11月中旬,近千只从西伯利亚<a class=\"a-tips-Article-QQ\" href=\"http://sports.qq.com/d/f_players/4/3176\" target=\"_blank\">贝加</a>尔湖飞来的海鸥在这里觅食,又是昆明一年一度的观鸥季,大量游客云集岸边,争相向海鸥投掷食物。\r\n		</p>\r\n		<p style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n			与滇池边的热闹相比,仅相隔几百米远的海埂基地内,一切都是静悄悄的。艳阳高照之下,风将树叶吹得沙沙作响,偌大的基地内只有三支足球队在进行室外训练,而国足则特意选择了基地中最为僻静的16号球场,蓝色帆布将整个球场围住,球场里面就成了新的世界。\r\n		</p>\r\n		<p style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n			虽然远离外界,但国足集训时可谓热情高涨,先是领队李铁与助教兰普拉比拼脚法,随后全队在抢圈时也是笑声不断。大战将至,队内的氛围至少看起来还是蛮轻松的。\r\n		</p>\r\n		<p style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n			为了不使封闭训练过于枯燥,经验丰富的主帅里皮每天都会为球队安排不同的训练项目,各类器材也都总是随意地组合摆放,据来得早些的记者说,到昆明9天以来,里皮的训练几乎每天都有新花样。而里皮本人,则在训练中显得非常安静,在供媒体观看的15分钟内,意大利人除了亲力亲为地摆放一些训练器材外,并没有说太多话。\r\n		</p>\r\n		<p style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n			一个值得留意的细节是,昨天下午海埂上空的<a class=\"a-tips-Article-QQ\" href=\"http://nbadata.sports.qq.com/team/21/teaminfo.html\" target=\"_blank\">太阳</a>很大,气温也已经接近20℃左右,球员和教练组成员基本都是穿着长袖的训练服,而里皮本人则与前几天一样,在身上又套了一件黑色羽绒马甲,这样的穿着不禁让人想起了当年在西亚桑拿天穿毛衣的米卢。\r\n		</p>\r\n		<p style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n			若论心理调节,里皮和米卢都是大师级人物,平日中的点滴细节,都会对球员带去潜移默化的影响。用球员的话说,里皮就是站在那不说话,也能感受到威严的气场。\r\n		</p>\r\n		<p style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n			随着15日的比赛临近,国足全队也在训练上加了量,从前天的一天一练到昨天的一天两练,全队也正式开启了最后的冲刺。只是这一切的努力,都是在一种安静的氛围中慢慢积蓄的,球队就是期待在4天之后,能有一个强力的爆发。\r\n		</p>\r\n	</h1>\r\n</h1>'),(6,'曝明年亚冠资格赛时间敲定 外援名额依然3+1','454634',0,'2016-11-12 19:16:00.000000','<p style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	本赛季<a class=\"a-tips-Article-QQ\" href=\"http://sports.qq.com/csocce/csl/index.htm\" target=\"_blank\">中超</a>联赛中，获得明年亚冠资格的球队是<a class=\"a-tips-Article-QQ\" href=\"http://soccer.stats.qq.com/team.htm?t1=6386&amp;from=zhongchao\" target=\"_blank\">广州恒大</a>、江苏苏宁、<a class=\"a-tips-Article-QQ\" href=\"http://soccer.stats.qq.com/team.htm?t1=7697&amp;from=zhongchao\" target=\"_blank\">上海上港</a>和<a class=\"a-tips-Article-QQ\" href=\"http://soccer.stats.qq.com/team.htm?t1=1377&amp;from=zhongchao\" target=\"_blank\">上海申花</a>，前两支球队确定将进入正赛。目前中超的技术分排名位列<a class=\"a-tips-Article-QQ\" href=\"http://csldata.sports.qq.com/team/7697.htm\" target=\"_blank\">东亚</a>区第4，除非中国队在12强赛中主场击败卡塔尔，否则这个排位应该不会有变化。\r\n</p>\r\n<p style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	按照这一排名，联赛第三名的上港将从第三轮资格赛开始踢，联赛第四的<a class=\"a-tips-Article-QQ\" href=\"http://soccerdata.sports.qq.com/team/1377.htm\" target=\"_blank\">申花</a>则从第二轮资格赛踢。<strong>据悉2017亚冠资格赛将分别在1月24日、1月31日和2月7日进行，</strong>而根据亚足联要求，资格赛报名需要在比赛前15天上交，因此申花需要在1月17日前，上港要在1月23日前完成引援工作。\r\n</p>\r\n<p style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	上港方面博阿斯前不久顶替埃里克森成为主教练，申花方面则在曼<a class=\"a-tips-Article-QQ\" href=\"http://sports.qq.com/d/f_players/4/3692\" target=\"_blank\">萨诺</a>离开后，新帅还没有敲定。对两家俱乐部来说，引援的动作必须要快才行。\r\n</p>\r\n<p style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	此外，2017亚冠外援名额并未发生改变，依然采用3+1的政策，即3名不限国籍的外援以及1名亚洲外援。亚足联将根据2016年11月技术分情况，确定2017和2018赛季亚冠、亚足联杯的名额分配。\r\n</p>'),(7,'曝本田圭佑冬窗遭米兰清洗 或零转会加盟上港','86967',1,'2016-11-12 19:17:00.000000','<span style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;\">腾讯体育11月12日（文/应虹霞）“从零转会费，到零转会费？”11月11日，多家日本媒体报道，日本国家队一哥</span><a class=\"a-tips-Article-QQ\" href=\"http://soccer.stats.qq.com/player.htm?type=shiyusaiya&amp;t1=49657\" target=\"_blank\">本田圭佑</a><span style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;\">将在明年1月份的冬季转会窗遭到</span><a class=\"a-tips-Article-QQ\" href=\"http://soccer.stats.qq.com/team.htm?t1=120&amp;from=yijia\" target=\"_blank\">AC米兰</a><span style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;\">清洗，很可能以零转会费的形式加盟</span><a class=\"a-tips-Article-QQ\" href=\"http://sports.qq.com/csocce/csl/index.htm\" target=\"_blank\">中超</a><span style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;\">的</span><a class=\"a-tips-Article-QQ\" href=\"http://soccer.stats.qq.com/team.htm?t1=7697&amp;from=zhongchao\" target=\"_blank\">上海上港</a><span style=\"font-family:微软雅黑, Helvetica, sans-serif;font-size:16px;background-color:#FFFFFF;\">，或者美国大联盟球队。</span>'),(8,'中国已连续四年成为世界第一大出境旅游消费国','1156630',0,'2016-11-12 19:17:00.000000','<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	新华社上海11月12日电（记者齐中熙）记者12日从正在此间举行的2016中国国际旅游交易会上获悉，今年前三季度，中国国内旅游人数33.6亿人次，入出境旅游总人数1.94亿人次，旅游收入2.9万亿元人民币，同比分别增长11%、13.5%和3.7%。中国已连续四年成为世界第一大出境旅游消费国，对全球旅游收入贡献平均超过13%。\r\n</p>\r\n<div>\r\n	<br />\r\n</div>'),(9,'八一飞行表演队女飞行员个人经历曝光(组图)','6357',0,'2016-11-12 19:18:00.000000','<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;\">\r\n	“目前能飞三代战斗机的女飞行员就剩她们四个。别看她们很瘦小，她们的身体素质比有些男飞行员还好！”承受超越自身7倍的压力，驾驭战斗机俯冲、转弯、翻滚，中国女人也能飞新锐战斗机了。“在空中把自己当女汉子，回到地面作一个女孩儿。”\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;\">\r\n	　　11月11日，在歼-10战机凌空而上的轰鸣声里，“八一”飞行表演队拉开了2014年第10届中国航展的帷幕。在机距不过几十厘米的“魔鬼编队”中俯冲、转 弯、跃升、翻滚。高空之上，是首次编入“八一”飞行表演队的女飞行员承受着自身6、7倍的压力高空之下，是对战斗机女飞行员抱着巨大期待的观众们不断爆发的一阵阵惊叹。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;\">\r\n	　　“目前能飞三代战斗机的女飞行员就剩她们四个。”“八一”飞行表演队所在师师长、特级飞行员赵康平眼里，这些刚飞了约80个小时歼-10表演机的姑娘们是表演队的“宝贝”，“别看她们很瘦小，她们的身体素质比有些男飞行员还好！” 赵康平告诉<span class=\"infoMblog\"><a class=\"a-tips-Article-QQ\" href=\"http://t.qq.com/SouthernWeekly#pref=qqcom.keyword\" target=\"_blank\">南方周末</a></span>记者。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;\">\r\n	　　在2009年<a class=\"a-tips-Article-QQ\" target=\"_blank\" href=\"http://news.qq.com/zt/2009/jianguo60/\">国庆阅兵</a>时驾着右二僚机飞过天安门之后，首批战斗机女飞行员余旭好像从公众视野中消失了。蛰伏5年后，她现在已经是中国第一批能够驾驶歼-10战斗机的女飞行员。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;\">\r\n	　　“在空中把自己当女汉子，回到地面作一个女孩儿。”余旭在顺利完成第十届中国航展飞行表演之后笑着说。\r\n</p>'),(10,'广东政协原主席受贿1.4亿 为什么没被终身监禁','a43545',0,'2016-11-12 19:19:00.000000','<span style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;\">11月11日，广西壮族自治区柳州市中级人民法院公开宣判广东省政协原主席朱明国受贿、巨额财产来源不明案。法院以受贿罪判处朱明国死刑，缓期二年执行，剥夺政治权利终身，并处没收个人全部财产；以巨额财产来源不明罪判处有期徒刑8年，决定执行死刑，缓期二年执行，剥夺政治权利终身，并处没收个人全部财产。</span>'),(11,'\"天宫食谱”：一顿太空鱼香肉丝要炒几十公斤','2363124',1,'2016-11-12 19:19:00.000000','<span style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;\">图①：航天员中心的太空冰淇淋。图②：景海鹏、陈冬太空进餐。图③：为庆祝景海鹏在太空过50岁生日准备的罐头装奶酪蛋糕。图④：航天员中心研制的航天3D食品打印机。图⑤：航天员中心讨论航天食品组装方案。</span>'),(12,'媒体称高校教师医务人员等群体收入将发生大变化','15420',1,'2016-11-12 19:20:00.000000','<p>\r\n	<span style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;\">中新网北京11月12日电 (记者 李金磊)中国的收入分配改革正不断推进。近日，中共中央、国务院密集发布多个涉及收入分配改革的重磅文件。根据文件提出的新政策，科研人员、高校教师、医务人员等群体的收入未来将发生大变化。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;\"><span style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;\">最近，涉及到科研人员的好消息接连不断。先是国务院10月21日公布《关于激发重点群体活力带动城乡居民增收的实施意见》，决定对科研人员等七大重点群体实施激励计划，带动城乡居民实现总体增收。</span><br />\r\n</span>\r\n</p>'),(13,'“红通”第5号嫌犯闫永明从新西兰回国投案自首','05162',4,'2016-11-12 19:21:00.000000','<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	2016年11月12日，在中央反腐败协调小组国际追逃追赃工作办公室的统筹协调下，经中国和新西兰两国执法部门密切合作，潜逃海外15年之久的闫永明回国投案自首。截至目前，“百名红通人员”已到案36人。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	闫永明，男，1969年出生，吉林通化金马药业有限公司原董事长，涉嫌职务侵占犯罪，2001年11月潜逃至澳大利亚、新西兰等国。国际刑警组织红色通缉令号码A-1336/8-2005。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	近年来，中新两国执法部门就缉捕闫永明、追缴其违法所得一直进行密切合作。在法律威慑和政策感召下，闫永明最终选择认罪，退还巨额赃款，缴纳巨额罚金并回国投案自首，对闫追逃追赃工作实现了“人赃俱获、罪罚兼备”的目标。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	此前，闫永明窜逃澳大利亚期间，应中国执法机关请求，澳大利亚警方罚没闫永明部分违法所得并交与中方。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	中央追逃办负责人对新西兰及澳大利亚执法部门在闫案上给予中方有力合作表示感谢，同时强调，闫永明归案再次表明世界上没有“避罪天堂”，“天网”会越织越密。\r\n</p>'),(14,'中国第4次“单身潮”来袭 更多女性选择主动单身','41456',3,'2016-11-12 19:21:00.000000','<span style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;\">11月11日，原本平常的一天，被强拉进节日的队伍，成为“光棍节”。有人说，自己是“没有强行秀恩爱，就没有伤害”的“单身狗”；也有人说，自己是“一个人精致生活”的单身贵族。统计显示，截至2015年，中国单身人口达到2亿，专家表示，中国第四次单身潮正面来袭！</span>'),(15,'南航客机在洛杉矶与拖车发生“剐蹭”事件','4156203',7,'2016-11-12 19:21:00.000000','<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	新华社洛杉矶11月11日电（记者郭爽）中国南方航空公司北美地区兼洛杉矶办事处总经理赫凌志11日证实，该公司一架客机10日夜在美国洛杉矶国际机场与地面拖车发生罕见“剐蹭”事件。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	赫凌志在接受新华社记者电话采访时说，10日23时多，一架南航A380客机在推出时，由于美方地面拖车操作方面出现问题，飞机被拖车刮到。目前技术人员正在对飞机进行检查。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	现场照片显示，拖车位于飞机头部下方。当地媒体报道说，没有机上乘客和人员在这起事件中受伤，拖车司机受轻伤，已被送往医院检查。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	“这种情况极为罕见，”赫凌志说。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	这架原计划飞往广州的CZ328航班随后取消，机上共有400多名乘客。洛杉矶国际机场官员对当地媒体表示，这起事件还造成另外两个航班取消，另有两个航班延误，1500多名乘客受到事故的影响\r\n</p>'),(16,'韩国总统朴槿惠陷“整容风波” 失职传言四起','49156',0,'2016-11-12 19:22:00.000000','<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	韩国总统朴槿惠所涉“闺蜜门”事件愈演愈烈之时，另一则不利于她的传闻也在发酵：韩联社报道，有媒体披露“岁月”号客轮2014年沉没当天，朴槿惠接受了7个小时的整形手术。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n	青瓦台发言人11日出面澄清，称这一说法纯属“无稽之谈”。另据韩联社报道称，当地时间11月12日下午4时，韩国民众会在首尔广场举行第三轮烛光集会，要求朴槿惠下台，就“亲信干政门”负责。\r\n</p>'),(17,'南航空姐高空玩机震 2年与430名乘客厕所全裸做爱高潮嘿','956120',0,'2016-11-12 19:22:00.000000','<span style=\"font-family:微软雅黑;font-size:16px;\">空姐卖淫事件已非第一次传出，先前日本媒体也曾报导过有日本空姐因为低薪，被迫组卖身团，会向机师提供性服务以赚取外快。</span>'),(18,'巴基斯坦一神庙发生爆炸 造成至少30死100伤','84956120',0,'2016-11-12 19:23:00.000000','<h1 style=\"font-size:26px;font-weight:normal;font-family:&quot;background-color:#FFFFFF;\">\r\n	<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n		俾路支省政府发言人表示，由于爆炸发生在夜间，且神庙位于山顶，给救援造成很大困难，政府可能动用直升机运送重伤员。他说，伤亡人数可能进一步上升。\r\n	</p>\r\n	<p style=\"font-family:&quot;font-size:16px;background-color:#FFFFFF;text-indent:2em;\">\r\n		据当地媒体报道，该爆炸由一名少年自杀式袭击者制造。不过这一说法尚未得到官方证实。目前也尚无任何组织宣称制造了此次爆炸。\r\n	</p>\r\n<br />\r\n</h1>'),(19,'霾黄色预警：河北河南山东局地有重度霾','12132',5,'2016-11-13 05:45:00.000000','<p style=\"font-size:14px;font-family:宋体, simsun, sans-serif, Arial;background-color:#FFFFFF;\">\r\n	中国天气网讯 中央气象台11月13日06时继续发布霾黄色预警：\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, simsun, sans-serif, Arial;background-color:#FFFFFF;\">\r\n	　　预计， 13日白天至夜间，北京、天津、河北中南部、山东西部、河南中东部、山西中部及西南部、陕西关中部分地区有中度霾，其中，河北中南部、河南东北部、山东西南部等地的部分地区有重度霾。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, simsun, sans-serif, Arial;background-color:#FFFFFF;\">\r\n	　　防 御 指 南：\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, simsun, sans-serif, Arial;background-color:#FFFFFF;\">\r\n	　　1、因空气质量明显降低，人员需适当防护；\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, simsun, sans-serif, Arial;background-color:#FFFFFF;\">\r\n	　　2、呼吸道疾病患者尽量减少外出，外出时可带上口罩\r\n</p>');
/*!40000 ALTER TABLE `news` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `talking`
--

DROP TABLE IF EXISTS `talking`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `talking` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `talk_tag` varchar(64) NOT NULL,
  `talk_time` datetime(6) NOT NULL,
  `talk_name` varchar(32) NOT NULL,
  `talk_email` varchar(254) NOT NULL,
  `talk_content` longtext NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `talking`
--

LOCK TABLES `talking` WRITE;
/*!40000 ALTER TABLE `talking` DISABLE KEYS */;
INSERT INTO `talking` VALUES (1,'talk','2016-11-14 12:21:00.000000','这夏未眠','1923361654@qq.com','我好想你'),(2,'talk','2016-11-14 12:21:00.000000','thinkgamer','thinkgamer@163.com','adfffffs'),(12,'10000','2016-11-14 13:27:42.000000','挖的青蛙','1923361654@qq.com','sas'),(14,'123412','2016-11-14 13:33:45.000000','adw','1923361654@qq.com','dew'),(15,'234234','2016-11-14 13:35:27.000000','sdfsd','1923361654@qq.com','sdf'),(16,'32423','2016-11-14 13:35:48.000000','sdas','1923361654@qq.com','ds'),(17,'talk','2016-11-14 13:36:08.000000','asdfs','adasdasda@163.com','asdas'),(18,'32423','2017-01-18 16:26:06.000000','thinkgamer','thin@qq.com','');
/*!40000 ALTER TABLE `talking` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `waibao_cate`
--

DROP TABLE IF EXISTS `waibao_cate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `waibao_cate` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `wcate_name` varchar(30) NOT NULL,
  `wcate_addtime` datetime(6) NOT NULL,
  `wcate_id` int(11) NOT NULL,
  `wcate_content` longtext NOT NULL,
  `wcate_people` longtext NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `wcate_id` (`wcate_id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `waibao_cate`
--

LOCK TABLES `waibao_cate` WRITE;
/*!40000 ALTER TABLE `waibao_cate` DISABLE KEYS */;
INSERT INTO `waibao_cate` VALUES (1,'Web开发','2016-11-09 14:16:00.000000',1,'我去人情味放得去问问呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜呜','是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的'),(2,'日志分析项目','2016-11-09 14:17:00.000000',2,'<p>\r\n	<span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>','<span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span>'),(3,'数据采集','2016-11-12 17:32:00.000000',3,'<p>\r\n	<span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>','<span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span>'),(4,'Hadoop项目','2016-11-12 17:33:00.000000',4,'<p>\r\n	<span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>','<span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span>'),(5,'Spark实时处理','2016-11-12 17:34:00.000000',5,'<p>\r\n	<span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>','<span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span>'),(6,'NOSQL系列','2016-11-12 17:34:00.000000',6,'<p>\r\n	<span><span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span></span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>','<span><span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span></span>'),(7,'论文撰写','2016-11-12 17:35:00.000000',7,'<p>\r\n	<span style=\"color:#009900;\"><span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span></span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#009900;\"></span> \r\n</p>','<span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span>'),(8,'图像处理制作','2016-11-12 17:36:00.000000',8,'<p>\r\n	<span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>','<span>是的方法方法方法发发发发发方法方法速度发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发发适当的淡淡的淡淡的淡淡的淡淡的淡淡的淡淡的</span>');
/*!40000 ALTER TABLE `waibao_cate` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'cyanscikit'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-05-04 23:50:42
